------------------------------- Model Structure ------------------------------
\ Model MIP-moo-LAMOSCAD
\ LP format - for model browsing. Use MPS format to capture full model detail.
Minimize multi-objectives
  objective_re_1: Priority=2 Weight=-1 AbsTol=1e-06 RelTol=0
   1.656005293113782 cover[o21,s5] + 8.768835702488516 cover[o8,s12]
   + 5.192313609275739 cover[o67,s8] + 5.194187238562328 cover[o67,s11]
   + 3.847040791184834 cover[o94,s19] + 16.50908021997948 cover[o108,s12]
   + 25.04312089958036 cover[o52,s11] + 25.04457999852962 cover[o52,s12]
   + 17.46776153991678 cover[o135,s8] + 17.47459003886271 cover[o135,s11]
   + 17.47212527202585 cover[o135,s12] + 1.73636941652219 cover[o193,s5]
   + 17.31254563220293 cover[o101,s12] + 17.45840418692007 cover[o133,s8]
   + 17.46433878645232 cover[o133,s11] + 17.45881463633803 cover[o133,s12]
   + 25.08960285999539 cover[o129,s12] + 21.69618510896736 cover[o1,s8]
   + 21.70752994976292 cover[o1,s11] + 6.380912476314614 cover[o162,s5]
   + 21.32494732221245 cover[o25,s1] + 17.44958541401305 cover[o136,s8]
   + 17.45617523563356 cover[o136,s11] + 17.45259856239765 cover[o136,s12]
   + 8.097283479593225 cover[o118,s12] + 8.035238887841476 cover[o122,s12]
   + 8.801126109712781 cover[o9,s12] + 5.29827709169672 cover[o68,s8]
   + 5.301277500391924 cover[o68,s11] + 10.90131271558268 cover[o203,s19]
   + 21.29381869446856 cover[o187,s1] + 13.42397543360965 cover[o149,s5]
   + 21.53128045552566 cover[o58,s8] + 21.54100110186841 cover[o58,s11]
   + 17.24880912033773 cover[o51,s12] + 25.0362638676935 cover[o127,s12]
   + 24.61743246899369 cover[o202,s19] + 22.16400613679744 cover[o4,s19]
   + 17.94755530452458 cover[o15,s19] + 1.703509486555793 cover[o212,s5]
   + 1.751595645995434 cover[o205,s5] + 3.996620971455787 cover[o12,s12]
   + 3.856762156195875 cover[o91,s19] + 2.402736137698901 cover[o30,s1]
   + 21.44261994878189 cover[o69,s11] + 13.52486890146308 cover[o148,s5]
   + 17.46519816271737 cover[o130,s8] + 17.47320343066453 cover[o130,s11]
   + 17.47376168219121 cover[o130,s12] + 25.07148876153163 cover[o128,s12]
   + 21.52126171603651 cover[o64,s8] + 21.53225653856404 cover[o64,s11]
   + 21.04152466538469 cover[o82,s19] + 5.488411163340683 cover[o105,s12]
   + 1.72964526220738 cover[o207,s5] + 22.20767114294255 cover[o78,s19]
   + 6.352705789539337 cover[o18,s5] + 17.25141178599506 cover[o102,s12]
   + 17.47008411049472 cover[o132,s8] + 17.47679177801677 cover[o132,s11]
   + 17.47377384482166 cover[o132,s12] + 21.26640026341699 cover[o183,s1]
   + 1.712289911663629 cover[o208,s5] + 15.19484282913435 cover[o123,s12]
   + 6.373674983843637 cover[o159,s5] + 7.121292015394131 cover[o37,s1]
   + 21.0865599089018 cover[o85,s19] + 22.1499367341832 cover[o75,s19]
   + 21.3389608804642 cover[o26,s1] + 17.23557569690492 cover[o103,s12]
   + 1.762387913009513 cover[o213,s5] + 17.48099914684344 cover[o134,s8]
   + 17.48850888333667 cover[o134,s11] + 17.4877917189458 cover[o134,s12]
   + 21.52582037502902 cover[o14,s8] + 21.53722807769091 cover[o14,s11]
   + 17.43152877492763 cover[o131,s8] + 17.43849221667717 cover[o131,s11]
   + 17.43656852906824 cover[o131,s12] + 21.29905002781984 cover[o223,s1]
   + 17.50329368203561 cover[o139,s8] + 17.50724296843505 cover[o139,s11]
   + 17.49928904824989 cover[o139,s12] + 7.123048317017492 cover[o24,s1]
   + 1.754409317990746 cover[o211,s5] + 16.77887356316623 cover[o53,s8]
   + 16.77313363573756 cover[o53,s11] + 2.37612152355227 cover[o22,s1]
   + 1.649248964481593 cover[o210,s5] + 21.51083665723187 cover[o66,s8]
   + 21.52175423908979 cover[o66,s11] + 8.084000355610007 cover[o116,s12]
   + 8.06672970537298 cover[o114,s12] + 2.349071682352224 cover[o29,s1]
   + 1.707600626453816 cover[o215,s5] + 21.02973321244782 cover[o79,s19]
   + 1.640675008694533 cover[o218,s5] + 13.54365426209338 cover[o151,s5]
   + 24.97928614139356 cover[o126,s12] + 6.429895342828597 cover[o158,s5]
   + 21.25501009016209 cover[o182,s1] + 2.434962377861985 cover[o192,s1]
   + 2.194548977163508 cover[o16,s19] + 21.22596184271914 cover[o198,s1]
   + 6.354044120317972 cover[o163,s5] + 1.748819443803134 cover[o20,s5]
  objective_cost_2: Priority=1 Weight=1 AbsTol=1e-06 RelTol=0
   50 select[s19] + 175 select[s11] + 175 select[s12] + 225 select[s8]
   + 125 select[s5] + 225 select[s1] + 0.03025 deploy[o21,s5,m]
   - 1.702444444444444 deploy[o21,s5,c]
   - 1.949972222222222 deploy[o21,s5,i]
   - 0.2172777777777778 deploy[o8,s12,m]
   - 1.454916666666667 deploy[o8,s12,c]
   - 1.207388888888889 deploy[o8,s12,i]
   - 0.7123333333333335 deploy[o67,s8,m]
   - 1.702444444444444 deploy[o67,s8,c] + 0.03025 deploy[o67,s8,i]
   - 0.4648055555555557 deploy[o67,s11,m] - 2.1975 deploy[o67,s11,c]
   - 1.949972222222222 deploy[o67,s11,i]
   - 0.4648055555555557 deploy[o94,s19,m]
   - 1.949972222222222 deploy[o94,s19,c] + 0.03025 deploy[o94,s19,i]
   - 0.2172777777777778 deploy[o108,s12,m]
   - 1.454916666666667 deploy[o108,s12,c]
   - 1.207388888888889 deploy[o108,s12,i]
   - 0.4648055555555557 deploy[o52,s11,m] - 2.1975 deploy[o52,s11,c]
   - 1.949972222222222 deploy[o52,s11,i]
   - 0.2172777777777778 deploy[o52,s12,m]
   - 1.454916666666667 deploy[o52,s12,c]
   - 1.207388888888889 deploy[o52,s12,i]
   - 0.7123333333333335 deploy[o135,s8,m]
   - 1.702444444444444 deploy[o135,s8,c] + 0.03025 deploy[o135,s8,i]
   - 0.4648055555555557 deploy[o135,s11,m] - 2.1975 deploy[o135,s11,c]
   - 1.949972222222222 deploy[o135,s11,i]
   - 0.2172777777777778 deploy[o135,s12,m]
   - 1.454916666666667 deploy[o135,s12,c]
   - 1.207388888888889 deploy[o135,s12,i] + 0.03025 deploy[o193,s5,m]
   - 1.702444444444444 deploy[o193,s5,c]
   - 1.949972222222222 deploy[o193,s5,i]
   - 0.2172777777777778 deploy[o101,s12,m]
   - 1.454916666666667 deploy[o101,s12,c]
   - 1.207388888888889 deploy[o101,s12,i]
   - 0.7123333333333335 deploy[o133,s8,m]
   - 1.702444444444444 deploy[o133,s8,c] + 0.03025 deploy[o133,s8,i]
   - 0.4648055555555557 deploy[o133,s11,m] - 2.1975 deploy[o133,s11,c]
   - 1.949972222222222 deploy[o133,s11,i]
   - 0.2172777777777778 deploy[o133,s12,m]
   - 1.454916666666667 deploy[o133,s12,c]
   - 1.207388888888889 deploy[o133,s12,i]
   - 0.2172777777777778 deploy[o129,s12,m]
   - 1.454916666666667 deploy[o129,s12,c]
   - 1.207388888888889 deploy[o129,s12,i]
   - 0.7123333333333335 deploy[o1,s8,m] - 1.702444444444444 deploy[o1,s8,c]
   + 0.03025 deploy[o1,s8,i] - 0.4648055555555557 deploy[o1,s11,m]
   - 2.1975 deploy[o1,s11,c] - 1.949972222222222 deploy[o1,s11,i]
   + 0.03025 deploy[o162,s5,m] - 1.702444444444444 deploy[o162,s5,c]
   - 1.949972222222222 deploy[o162,s5,i]
   - 0.2172777777777778 deploy[o25,s1,m]
   - 0.9598611111111112 deploy[o25,s1,c]
   - 0.2172777777777778 deploy[o25,s1,i]
   - 0.7123333333333335 deploy[o136,s8,m]
   - 1.702444444444444 deploy[o136,s8,c] + 0.03025 deploy[o136,s8,i]
   - 0.4648055555555557 deploy[o136,s11,m] - 2.1975 deploy[o136,s11,c]
   - 1.949972222222222 deploy[o136,s11,i]
   - 0.2172777777777778 deploy[o136,s12,m]
   - 1.454916666666667 deploy[o136,s12,c]
   - 1.207388888888889 deploy[o136,s12,i]
   - 0.2172777777777778 deploy[o118,s12,m]
   - 1.454916666666667 deploy[o118,s12,c]
   - 1.207388888888889 deploy[o118,s12,i]
   - 0.2172777777777778 deploy[o122,s12,m]
   - 1.454916666666667 deploy[o122,s12,c]
   - 1.207388888888889 deploy[o122,s12,i]
   - 0.2172777777777778 deploy[o9,s12,m]
   - 1.454916666666667 deploy[o9,s12,c]
   - 1.207388888888889 deploy[o9,s12,i]
   - 0.7123333333333335 deploy[o68,s8,m]
   - 1.702444444444444 deploy[o68,s8,c] + 0.03025 deploy[o68,s8,i]
   - 0.4648055555555557 deploy[o68,s11,m] - 2.1975 deploy[o68,s11,c]
   - 1.949972222222222 deploy[o68,s11,i]
   - 0.4648055555555557 deploy[o203,s19,m]
   - 1.949972222222222 deploy[o203,s19,c] + 0.03025 deploy[o203,s19,i]
   - 0.2172777777777778 deploy[o187,s1,m]
   - 0.9598611111111112 deploy[o187,s1,c]
   - 0.2172777777777778 deploy[o187,s1,i] + 0.03025 deploy[o149,s5,m]
   - 1.702444444444444 deploy[o149,s5,c]
   - 1.949972222222222 deploy[o149,s5,i]
   - 0.7123333333333335 deploy[o58,s8,m]
   - 1.702444444444444 deploy[o58,s8,c] + 0.03025 deploy[o58,s8,i]
   - 0.4648055555555557 deploy[o58,s11,m] - 2.1975 deploy[o58,s11,c]
   - 1.949972222222222 deploy[o58,s11,i]
   - 0.2172777777777778 deploy[o51,s12,m]
   - 1.454916666666667 deploy[o51,s12,c]
   - 1.207388888888889 deploy[o51,s12,i]
   - 0.2172777777777778 deploy[o127,s12,m]
   - 1.454916666666667 deploy[o127,s12,c]
   - 1.207388888888889 deploy[o127,s12,i]
   - 0.4648055555555557 deploy[o202,s19,m]
   - 1.949972222222222 deploy[o202,s19,c] + 0.03025 deploy[o202,s19,i]
   - 0.4648055555555557 deploy[o4,s19,m]
   - 1.949972222222222 deploy[o4,s19,c] + 0.03025 deploy[o4,s19,i]
   - 0.4648055555555557 deploy[o15,s19,m]
   - 1.949972222222222 deploy[o15,s19,c] + 0.03025 deploy[o15,s19,i]
   + 0.03025 deploy[o212,s5,m] - 1.702444444444444 deploy[o212,s5,c]
   - 1.949972222222222 deploy[o212,s5,i] + 0.03025 deploy[o205,s5,m]
   - 1.702444444444444 deploy[o205,s5,c]
   - 1.949972222222222 deploy[o205,s5,i]
   - 0.2172777777777778 deploy[o12,s12,m]
   - 1.454916666666667 deploy[o12,s12,c]
   - 1.207388888888889 deploy[o12,s12,i]
   - 0.4648055555555557 deploy[o91,s19,m]
   - 1.949972222222222 deploy[o91,s19,c] + 0.03025 deploy[o91,s19,i]
   - 0.2172777777777778 deploy[o30,s1,m]
   - 0.9598611111111112 deploy[o30,s1,c]
   - 0.2172777777777778 deploy[o30,s1,i]
   - 0.4648055555555557 deploy[o69,s11,m] - 2.1975 deploy[o69,s11,c]
   - 1.949972222222222 deploy[o69,s11,i] + 0.03025 deploy[o148,s5,m]
   - 1.702444444444444 deploy[o148,s5,c]
   - 1.949972222222222 deploy[o148,s5,i]
   - 0.7123333333333335 deploy[o130,s8,m]
   - 1.702444444444444 deploy[o130,s8,c] + 0.03025 deploy[o130,s8,i]
   - 0.4648055555555557 deploy[o130,s11,m] - 2.1975 deploy[o130,s11,c]
   - 1.949972222222222 deploy[o130,s11,i]
   - 0.2172777777777778 deploy[o130,s12,m]
   - 1.454916666666667 deploy[o130,s12,c]
   - 1.207388888888889 deploy[o130,s12,i]
   - 0.2172777777777778 deploy[o128,s12,m]
   - 1.454916666666667 deploy[o128,s12,c]
   - 1.207388888888889 deploy[o128,s12,i]
   - 0.7123333333333335 deploy[o64,s8,m]
   - 1.702444444444444 deploy[o64,s8,c] + 0.03025 deploy[o64,s8,i]
   - 0.4648055555555557 deploy[o64,s11,m] - 2.1975 deploy[o64,s11,c]
   - 1.949972222222222 deploy[o64,s11,i]
   - 0.4648055555555557 deploy[o82,s19,m]
   - 1.949972222222222 deploy[o82,s19,c] + 0.03025 deploy[o82,s19,i]
   - 0.2172777777777778 deploy[o105,s12,m]
   - 1.454916666666667 deploy[o105,s12,c]
   - 1.207388888888889 deploy[o105,s12,i] + 0.03025 deploy[o207,s5,m]
   - 1.702444444444444 deploy[o207,s5,c]
   - 1.949972222222222 deploy[o207,s5,i]
   - 0.4648055555555557 deploy[o78,s19,m]
   - 1.949972222222222 deploy[o78,s19,c] + 0.03025 deploy[o78,s19,i]
   + 0.03025 deploy[o18,s5,m] - 1.702444444444444 deploy[o18,s5,c]
   - 1.949972222222222 deploy[o18,s5,i]
   - 0.2172777777777778 deploy[o102,s12,m]
   - 1.454916666666667 deploy[o102,s12,c]
   - 1.207388888888889 deploy[o102,s12,i]
   - 0.7123333333333335 deploy[o132,s8,m]
   - 1.702444444444444 deploy[o132,s8,c] + 0.03025 deploy[o132,s8,i]
   - 0.4648055555555557 deploy[o132,s11,m] - 2.1975 deploy[o132,s11,c]
   - 1.949972222222222 deploy[o132,s11,i]
   - 0.2172777777777778 deploy[o132,s12,m]
   - 1.454916666666667 deploy[o132,s12,c]
   - 1.207388888888889 deploy[o132,s12,i]
   - 0.2172777777777778 deploy[o183,s1,m]
   - 0.9598611111111112 deploy[o183,s1,c]
   - 0.2172777777777778 deploy[o183,s1,i] + 0.03025 deploy[o208,s5,m]
   - 1.702444444444444 deploy[o208,s5,c]
   - 1.949972222222222 deploy[o208,s5,i]
   - 0.2172777777777778 deploy[o123,s12,m]
   - 1.454916666666667 deploy[o123,s12,c]
   - 1.207388888888889 deploy[o123,s12,i] + 0.03025 deploy[o159,s5,m]
   - 1.702444444444444 deploy[o159,s5,c]
   - 1.949972222222222 deploy[o159,s5,i]
   - 0.2172777777777778 deploy[o37,s1,m]
   - 0.9598611111111112 deploy[o37,s1,c]
   - 0.2172777777777778 deploy[o37,s1,i]
   - 0.4648055555555557 deploy[o85,s19,m]
   - 1.949972222222222 deploy[o85,s19,c] + 0.03025 deploy[o85,s19,i]
   - 0.4648055555555557 deploy[o75,s19,m]
   - 1.949972222222222 deploy[o75,s19,c] + 0.03025 deploy[o75,s19,i]
   - 0.2172777777777778 deploy[o26,s1,m]
   - 0.9598611111111112 deploy[o26,s1,c]
   - 0.2172777777777778 deploy[o26,s1,i]
   - 0.2172777777777778 deploy[o103,s12,m]
   - 1.454916666666667 deploy[o103,s12,c]
   - 1.207388888888889 deploy[o103,s12,i] + 0.03025 deploy[o213,s5,m]
   - 1.702444444444444 deploy[o213,s5,c]
   - 1.949972222222222 deploy[o213,s5,i]
   - 0.7123333333333335 deploy[o134,s8,m]
   - 1.702444444444444 deploy[o134,s8,c] + 0.03025 deploy[o134,s8,i]
   - 0.4648055555555557 deploy[o134,s11,m] - 2.1975 deploy[o134,s11,c]
   - 1.949972222222222 deploy[o134,s11,i]
   - 0.2172777777777778 deploy[o134,s12,m]
   - 1.454916666666667 deploy[o134,s12,c]
   - 1.207388888888889 deploy[o134,s12,i]
   - 0.7123333333333335 deploy[o14,s8,m]
   - 1.702444444444444 deploy[o14,s8,c] + 0.03025 deploy[o14,s8,i]
   - 0.4648055555555557 deploy[o14,s11,m] - 2.1975 deploy[o14,s11,c]
   - 1.949972222222222 deploy[o14,s11,i]
   - 0.7123333333333335 deploy[o131,s8,m]
   - 1.702444444444444 deploy[o131,s8,c] + 0.03025 deploy[o131,s8,i]
   - 0.4648055555555557 deploy[o131,s11,m] - 2.1975 deploy[o131,s11,c]
   - 1.949972222222222 deploy[o131,s11,i]
   - 0.2172777777777778 deploy[o131,s12,m]
   - 1.454916666666667 deploy[o131,s12,c]
   - 1.207388888888889 deploy[o131,s12,i]
   - 0.2172777777777778 deploy[o223,s1,m]
   - 0.9598611111111112 deploy[o223,s1,c]
   - 0.2172777777777778 deploy[o223,s1,i]
   - 0.7123333333333335 deploy[o139,s8,m]
   - 1.702444444444444 deploy[o139,s8,c] + 0.03025 deploy[o139,s8,i]
   - 0.4648055555555557 deploy[o139,s11,m] - 2.1975 deploy[o139,s11,c]
   - 1.949972222222222 deploy[o139,s11,i]
   - 0.2172777777777778 deploy[o139,s12,m]
   - 1.454916666666667 deploy[o139,s12,c]
   - 1.207388888888889 deploy[o139,s12,i]
   - 0.2172777777777778 deploy[o24,s1,m]
   - 0.9598611111111112 deploy[o24,s1,c]
   - 0.2172777777777778 deploy[o24,s1,i] + 0.03025 deploy[o211,s5,m]
   - 1.702444444444444 deploy[o211,s5,c]
   - 1.949972222222222 deploy[o211,s5,i]
   - 0.7123333333333335 deploy[o53,s8,m]
   - 1.702444444444444 deploy[o53,s8,c] + 0.03025 deploy[o53,s8,i]
   - 0.4648055555555557 deploy[o53,s11,m] - 2.1975 deploy[o53,s11,c]
   - 1.949972222222222 deploy[o53,s11,i]
   - 0.2172777777777778 deploy[o22,s1,m]
   - 0.9598611111111112 deploy[o22,s1,c]
   - 0.2172777777777778 deploy[o22,s1,i] + 0.03025 deploy[o210,s5,m]
   - 1.702444444444444 deploy[o210,s5,c]
   - 1.949972222222222 deploy[o210,s5,i]
   - 0.7123333333333335 deploy[o66,s8,m]
   - 1.702444444444444 deploy[o66,s8,c] + 0.03025 deploy[o66,s8,i]
   - 0.4648055555555557 deploy[o66,s11,m] - 2.1975 deploy[o66,s11,c]
   - 1.949972222222222 deploy[o66,s11,i]
   - 0.2172777777777778 deploy[o116,s12,m]
   - 1.454916666666667 deploy[o116,s12,c]
   - 1.207388888888889 deploy[o116,s12,i]
   - 0.2172777777777778 deploy[o114,s12,m]
   - 1.454916666666667 deploy[o114,s12,c]
   - 1.207388888888889 deploy[o114,s12,i]
   - 0.2172777777777778 deploy[o29,s1,m]
   - 0.9598611111111112 deploy[o29,s1,c]
   - 0.2172777777777778 deploy[o29,s1,i] + 0.03025 deploy[o215,s5,m]
   - 1.702444444444444 deploy[o215,s5,c]
   - 1.949972222222222 deploy[o215,s5,i]
   - 0.4648055555555557 deploy[o79,s19,m]
   - 1.949972222222222 deploy[o79,s19,c] + 0.03025 deploy[o79,s19,i]
   + 0.03025 deploy[o218,s5,m] - 1.702444444444444 deploy[o218,s5,c]
   - 1.949972222222222 deploy[o218,s5,i] + 0.03025 deploy[o151,s5,m]
   - 1.702444444444444 deploy[o151,s5,c]
   - 1.949972222222222 deploy[o151,s5,i]
   - 0.2172777777777778 deploy[o126,s12,m]
   - 1.454916666666667 deploy[o126,s12,c]
   - 1.207388888888889 deploy[o126,s12,i] + 0.03025 deploy[o158,s5,m]
   - 1.702444444444444 deploy[o158,s5,c]
   - 1.949972222222222 deploy[o158,s5,i]
   - 0.2172777777777778 deploy[o182,s1,m]
   - 0.9598611111111112 deploy[o182,s1,c]
   - 0.2172777777777778 deploy[o182,s1,i]
   - 0.2172777777777778 deploy[o192,s1,m]
   - 0.9598611111111112 deploy[o192,s1,c]
   - 0.2172777777777778 deploy[o192,s1,i]
   - 0.4648055555555557 deploy[o16,s19,m]
   - 1.949972222222222 deploy[o16,s19,c] + 0.03025 deploy[o16,s19,i]
   - 0.2172777777777778 deploy[o198,s1,m]
   - 0.9598611111111112 deploy[o198,s1,c]
   - 0.2172777777777778 deploy[o198,s1,i] + 0.03025 deploy[o163,s5,m]
   - 1.702444444444444 deploy[o163,s5,c]
   - 1.949972222222222 deploy[o163,s5,i] + 0.03025 deploy[o20,s5,m]
   - 1.702444444444444 deploy[o20,s5,c]
   - 1.949972222222222 deploy[o20,s5,i]
Subject To
 C_open_facility_to_cover[o21,s5]: cover[o21,s5] - select[s5] <= 0
 C_open_facility_to_cover[o8,s12]: cover[o8,s12] - select[s12] <= 0
 C_open_facility_to_cover[o67,s8]: cover[o67,s8] - select[s8] <= 0
 C_open_facility_to_cover[o67,s11]: cover[o67,s11] - select[s11] <= 0
 C_open_facility_to_cover[o94,s19]: cover[o94,s19] - select[s19] <= 0
 C_open_facility_to_cover[o108,s12]: cover[o108,s12] - select[s12] <= 0
 C_open_facility_to_cover[o52,s11]: cover[o52,s11] - select[s11] <= 0
 C_open_facility_to_cover[o52,s12]: cover[o52,s12] - select[s12] <= 0
 C_open_facility_to_cover[o135,s8]: cover[o135,s8] - select[s8] <= 0
 C_open_facility_to_cover[o135,s11]: cover[o135,s11] - select[s11] <= 0
 C_open_facility_to_cover[o135,s12]: cover[o135,s12] - select[s12] <= 0
 C_open_facility_to_cover[o193,s5]: cover[o193,s5] - select[s5] <= 0
 C_open_facility_to_cover[o101,s12]: cover[o101,s12] - select[s12] <= 0
 C_open_facility_to_cover[o133,s8]: cover[o133,s8] - select[s8] <= 0
 C_open_facility_to_cover[o133,s11]: cover[o133,s11] - select[s11] <= 0
 C_open_facility_to_cover[o133,s12]: cover[o133,s12] - select[s12] <= 0
 C_open_facility_to_cover[o129,s12]: cover[o129,s12] - select[s12] <= 0
 C_open_facility_to_cover[o1,s8]: cover[o1,s8] - select[s8] <= 0
 C_open_facility_to_cover[o1,s11]: cover[o1,s11] - select[s11] <= 0
 C_open_facility_to_cover[o162,s5]: cover[o162,s5] - select[s5] <= 0
 C_open_facility_to_cover[o25,s1]: cover[o25,s1] - select[s1] <= 0
 C_open_facility_to_cover[o136,s8]: cover[o136,s8] - select[s8] <= 0
 C_open_facility_to_cover[o136,s11]: cover[o136,s11] - select[s11] <= 0
 C_open_facility_to_cover[o136,s12]: cover[o136,s12] - select[s12] <= 0
 C_open_facility_to_cover[o118,s12]: cover[o118,s12] - select[s12] <= 0
 C_open_facility_to_cover[o122,s12]: cover[o122,s12] - select[s12] <= 0
 C_open_facility_to_cover[o9,s12]: cover[o9,s12] - select[s12] <= 0
 C_open_facility_to_cover[o68,s8]: cover[o68,s8] - select[s8] <= 0
 C_open_facility_to_cover[o68,s11]: cover[o68,s11] - select[s11] <= 0
 C_open_facility_to_cover[o203,s19]: cover[o203,s19] - select[s19] <= 0
 C_open_facility_to_cover[o187,s1]: cover[o187,s1] - select[s1] <= 0
 C_open_facility_to_cover[o149,s5]: cover[o149,s5] - select[s5] <= 0
 C_open_facility_to_cover[o58,s8]: cover[o58,s8] - select[s8] <= 0
 C_open_facility_to_cover[o58,s11]: cover[o58,s11] - select[s11] <= 0
 C_open_facility_to_cover[o51,s12]: cover[o51,s12] - select[s12] <= 0
 C_open_facility_to_cover[o127,s12]: cover[o127,s12] - select[s12] <= 0
 C_open_facility_to_cover[o202,s19]: cover[o202,s19] - select[s19] <= 0
 C_open_facility_to_cover[o4,s19]: cover[o4,s19] - select[s19] <= 0
 C_open_facility_to_cover[o15,s19]: cover[o15,s19] - select[s19] <= 0
 C_open_facility_to_cover[o212,s5]: cover[o212,s5] - select[s5] <= 0
 C_open_facility_to_cover[o205,s5]: cover[o205,s5] - select[s5] <= 0
 C_open_facility_to_cover[o12,s12]: cover[o12,s12] - select[s12] <= 0
 C_open_facility_to_cover[o91,s19]: cover[o91,s19] - select[s19] <= 0
 C_open_facility_to_cover[o30,s1]: cover[o30,s1] - select[s1] <= 0
 C_open_facility_to_cover[o69,s11]: cover[o69,s11] - select[s11] <= 0
 C_open_facility_to_cover[o148,s5]: cover[o148,s5] - select[s5] <= 0
 C_open_facility_to_cover[o130,s8]: cover[o130,s8] - select[s8] <= 0
 C_open_facility_to_cover[o130,s11]: cover[o130,s11] - select[s11] <= 0
 C_open_facility_to_cover[o130,s12]: cover[o130,s12] - select[s12] <= 0
 C_open_facility_to_cover[o128,s12]: cover[o128,s12] - select[s12] <= 0
 C_open_facility_to_cover[o64,s8]: cover[o64,s8] - select[s8] <= 0
 C_open_facility_to_cover[o64,s11]: cover[o64,s11] - select[s11] <= 0
 C_open_facility_to_cover[o82,s19]: cover[o82,s19] - select[s19] <= 0
 C_open_facility_to_cover[o105,s12]: cover[o105,s12] - select[s12] <= 0
 C_open_facility_to_cover[o207,s5]: cover[o207,s5] - select[s5] <= 0
 C_open_facility_to_cover[o78,s19]: cover[o78,s19] - select[s19] <= 0
 C_open_facility_to_cover[o18,s5]: cover[o18,s5] - select[s5] <= 0
 C_open_facility_to_cover[o102,s12]: cover[o102,s12] - select[s12] <= 0
 C_open_facility_to_cover[o132,s8]: cover[o132,s8] - select[s8] <= 0
 C_open_facility_to_cover[o132,s11]: cover[o132,s11] - select[s11] <= 0
 C_open_facility_to_cover[o132,s12]: cover[o132,s12] - select[s12] <= 0
 C_open_facility_to_cover[o183,s1]: cover[o183,s1] - select[s1] <= 0
 C_open_facility_to_cover[o208,s5]: cover[o208,s5] - select[s5] <= 0
 C_open_facility_to_cover[o123,s12]: cover[o123,s12] - select[s12] <= 0
 C_open_facility_to_cover[o159,s5]: cover[o159,s5] - select[s5] <= 0
 C_open_facility_to_cover[o37,s1]: cover[o37,s1] - select[s1] <= 0
 C_open_facility_to_cover[o85,s19]: cover[o85,s19] - select[s19] <= 0
 C_open_facility_to_cover[o75,s19]: cover[o75,s19] - select[s19] <= 0
 C_open_facility_to_cover[o26,s1]: cover[o26,s1] - select[s1] <= 0
 C_open_facility_to_cover[o103,s12]: cover[o103,s12] - select[s12] <= 0
 C_open_facility_to_cover[o213,s5]: cover[o213,s5] - select[s5] <= 0
 C_open_facility_to_cover[o134,s8]: cover[o134,s8] - select[s8] <= 0
 C_open_facility_to_cover[o134,s11]: cover[o134,s11] - select[s11] <= 0
 C_open_facility_to_cover[o134,s12]: cover[o134,s12] - select[s12] <= 0
 C_open_facility_to_cover[o14,s8]: cover[o14,s8] - select[s8] <= 0
 C_open_facility_to_cover[o14,s11]: cover[o14,s11] - select[s11] <= 0
 C_open_facility_to_cover[o131,s8]: cover[o131,s8] - select[s8] <= 0
 C_open_facility_to_cover[o131,s11]: cover[o131,s11] - select[s11] <= 0
 C_open_facility_to_cover[o131,s12]: cover[o131,s12] - select[s12] <= 0
 C_open_facility_to_cover[o223,s1]: cover[o223,s1] - select[s1] <= 0
 C_open_facility_to_cover[o139,s8]: cover[o139,s8] - select[s8] <= 0
 C_open_facility_to_cover[o139,s11]: cover[o139,s11] - select[s11] <= 0
 C_open_facility_to_cover[o139,s12]: cover[o139,s12] - select[s12] <= 0
 C_open_facility_to_cover[o24,s1]: cover[o24,s1] - select[s1] <= 0
 C_open_facility_to_cover[o211,s5]: cover[o211,s5] - select[s5] <= 0
 C_open_facility_to_cover[o53,s8]: cover[o53,s8] - select[s8] <= 0
 C_open_facility_to_cover[o53,s11]: cover[o53,s11] - select[s11] <= 0
 C_open_facility_to_cover[o22,s1]: cover[o22,s1] - select[s1] <= 0
 C_open_facility_to_cover[o210,s5]: cover[o210,s5] - select[s5] <= 0
 C_open_facility_to_cover[o66,s8]: cover[o66,s8] - select[s8] <= 0
 C_open_facility_to_cover[o66,s11]: cover[o66,s11] - select[s11] <= 0
 C_open_facility_to_cover[o116,s12]: cover[o116,s12] - select[s12] <= 0
 C_open_facility_to_cover[o114,s12]: cover[o114,s12] - select[s12] <= 0
 C_open_facility_to_cover[o29,s1]: cover[o29,s1] - select[s1] <= 0
 C_open_facility_to_cover[o215,s5]: cover[o215,s5] - select[s5] <= 0
 C_open_facility_to_cover[o79,s19]: cover[o79,s19] - select[s19] <= 0
 C_open_facility_to_cover[o218,s5]: cover[o218,s5] - select[s5] <= 0
 C_open_facility_to_cover[o151,s5]: cover[o151,s5] - select[s5] <= 0
 C_open_facility_to_cover[o126,s12]: cover[o126,s12] - select[s12] <= 0
 C_open_facility_to_cover[o158,s5]: cover[o158,s5] - select[s5] <= 0
 C_open_facility_to_cover[o182,s1]: cover[o182,s1] - select[s1] <= 0
 C_open_facility_to_cover[o192,s1]: cover[o192,s1] - select[s1] <= 0
 C_open_facility_to_cover[o16,s19]: cover[o16,s19] - select[s19] <= 0
 C_open_facility_to_cover[o198,s1]: cover[o198,s1] - select[s1] <= 0
 C_open_facility_to_cover[o163,s5]: cover[o163,s5] - select[s5] <= 0
 C_open_facility_to_cover[o20,s5]: cover[o20,s5] - select[s5] <= 0
 C_few_facility_per_spill[o21,s5]: cover[o21,s5] <= 1
 C_few_facility_per_spill[o8,s12]: cover[o8,s12] <= 1
 C_few_facility_per_spill[o67,s8]: cover[o67,s8] + cover[o67,s11] <= 1
 C_few_facility_per_spill[o67,s11]: cover[o67,s8] + cover[o67,s11] <= 1
 C_few_facility_per_spill[o94,s19]: cover[o94,s19] <= 1
 C_few_facility_per_spill[o108,s12]: cover[o108,s12] <= 1
 C_few_facility_per_spill[o52,s11]: cover[o52,s11] + cover[o52,s12] <= 1
 C_few_facility_per_spill[o52,s12]: cover[o52,s11] + cover[o52,s12] <= 1
 C_few_facility_per_spill[o135,s8]: cover[o135,s8] + cover[o135,s11]
   + cover[o135,s12] <= 1
 C_few_facility_per_spill[o135,s11]: cover[o135,s8] + cover[o135,s11]
   + cover[o135,s12] <= 1
 C_few_facility_per_spill[o135,s12]: cover[o135,s8] + cover[o135,s11]
   + cover[o135,s12] <= 1
 C_few_facility_per_spill[o193,s5]: cover[o193,s5] <= 1
 C_few_facility_per_spill[o101,s12]: cover[o101,s12] <= 1
 C_few_facility_per_spill[o133,s8]: cover[o133,s8] + cover[o133,s11]
   + cover[o133,s12] <= 1
 C_few_facility_per_spill[o133,s11]: cover[o133,s8] + cover[o133,s11]
   + cover[o133,s12] <= 1
 C_few_facility_per_spill[o133,s12]: cover[o133,s8] + cover[o133,s11]
   + cover[o133,s12] <= 1
 C_few_facility_per_spill[o129,s12]: cover[o129,s12] <= 1
 C_few_facility_per_spill[o1,s8]: cover[o1,s8] + cover[o1,s11] <= 1
 C_few_facility_per_spill[o1,s11]: cover[o1,s8] + cover[o1,s11] <= 1
 C_few_facility_per_spill[o162,s5]: cover[o162,s5] <= 1
 C_few_facility_per_spill[o25,s1]: cover[o25,s1] <= 1
 C_few_facility_per_spill[o136,s8]: cover[o136,s8] + cover[o136,s11]
   + cover[o136,s12] <= 1
 C_few_facility_per_spill[o136,s11]: cover[o136,s8] + cover[o136,s11]
   + cover[o136,s12] <= 1
 C_few_facility_per_spill[o136,s12]: cover[o136,s8] + cover[o136,s11]
   + cover[o136,s12] <= 1
 C_few_facility_per_spill[o118,s12]: cover[o118,s12] <= 1
 C_few_facility_per_spill[o122,s12]: cover[o122,s12] <= 1
 C_few_facility_per_spill[o9,s12]: cover[o9,s12] <= 1
 C_few_facility_per_spill[o68,s8]: cover[o68,s8] + cover[o68,s11] <= 1
 C_few_facility_per_spill[o68,s11]: cover[o68,s8] + cover[o68,s11] <= 1
 C_few_facility_per_spill[o203,s19]: cover[o203,s19] <= 1
 C_few_facility_per_spill[o187,s1]: cover[o187,s1] <= 1
 C_few_facility_per_spill[o149,s5]: cover[o149,s5] <= 1
 C_few_facility_per_spill[o58,s8]: cover[o58,s8] + cover[o58,s11] <= 1
 C_few_facility_per_spill[o58,s11]: cover[o58,s8] + cover[o58,s11] <= 1
 C_few_facility_per_spill[o51,s12]: cover[o51,s12] <= 1
 C_few_facility_per_spill[o127,s12]: cover[o127,s12] <= 1
 C_few_facility_per_spill[o202,s19]: cover[o202,s19] <= 1
 C_few_facility_per_spill[o4,s19]: cover[o4,s19] <= 1
 C_few_facility_per_spill[o15,s19]: cover[o15,s19] <= 1
 C_few_facility_per_spill[o212,s5]: cover[o212,s5] <= 1
 C_few_facility_per_spill[o205,s5]: cover[o205,s5] <= 1
 C_few_facility_per_spill[o12,s12]: cover[o12,s12] <= 1
 C_few_facility_per_spill[o91,s19]: cover[o91,s19] <= 1
 C_few_facility_per_spill[o30,s1]: cover[o30,s1] <= 1
 C_few_facility_per_spill[o69,s11]: cover[o69,s11] <= 1
 C_few_facility_per_spill[o148,s5]: cover[o148,s5] <= 1
 C_few_facility_per_spill[o130,s8]: cover[o130,s8] + cover[o130,s11]
   + cover[o130,s12] <= 1
 C_few_facility_per_spill[o130,s11]: cover[o130,s8] + cover[o130,s11]
   + cover[o130,s12] <= 1
 C_few_facility_per_spill[o130,s12]: cover[o130,s8] + cover[o130,s11]
   + cover[o130,s12] <= 1
 C_few_facility_per_spill[o128,s12]: cover[o128,s12] <= 1
 C_few_facility_per_spill[o64,s8]: cover[o64,s8] + cover[o64,s11] <= 1
 C_few_facility_per_spill[o64,s11]: cover[o64,s8] + cover[o64,s11] <= 1
 C_few_facility_per_spill[o82,s19]: cover[o82,s19] <= 1
 C_few_facility_per_spill[o105,s12]: cover[o105,s12] <= 1
 C_few_facility_per_spill[o207,s5]: cover[o207,s5] <= 1
 C_few_facility_per_spill[o78,s19]: cover[o78,s19] <= 1
 C_few_facility_per_spill[o18,s5]: cover[o18,s5] <= 1
 C_few_facility_per_spill[o102,s12]: cover[o102,s12] <= 1
 C_few_facility_per_spill[o132,s8]: cover[o132,s8] + cover[o132,s11]
   + cover[o132,s12] <= 1
 C_few_facility_per_spill[o132,s11]: cover[o132,s8] + cover[o132,s11]
   + cover[o132,s12] <= 1
 C_few_facility_per_spill[o132,s12]: cover[o132,s8] + cover[o132,s11]
   + cover[o132,s12] <= 1
 C_few_facility_per_spill[o183,s1]: cover[o183,s1] <= 1
 C_few_facility_per_spill[o208,s5]: cover[o208,s5] <= 1
 C_few_facility_per_spill[o123,s12]: cover[o123,s12] <= 1
 C_few_facility_per_spill[o159,s5]: cover[o159,s5] <= 1
 C_few_facility_per_spill[o37,s1]: cover[o37,s1] <= 1
 C_few_facility_per_spill[o85,s19]: cover[o85,s19] <= 1
 C_few_facility_per_spill[o75,s19]: cover[o75,s19] <= 1
 C_few_facility_per_spill[o26,s1]: cover[o26,s1] <= 1
 C_few_facility_per_spill[o103,s12]: cover[o103,s12] <= 1
 C_few_facility_per_spill[o213,s5]: cover[o213,s5] <= 1
 C_few_facility_per_spill[o134,s8]: cover[o134,s8] + cover[o134,s11]
   + cover[o134,s12] <= 1
 C_few_facility_per_spill[o134,s11]: cover[o134,s8] + cover[o134,s11]
   + cover[o134,s12] <= 1
 C_few_facility_per_spill[o134,s12]: cover[o134,s8] + cover[o134,s11]
   + cover[o134,s12] <= 1
 C_few_facility_per_spill[o14,s8]: cover[o14,s8] + cover[o14,s11] <= 1
 C_few_facility_per_spill[o14,s11]: cover[o14,s8] + cover[o14,s11] <= 1
 C_few_facility_per_spill[o131,s8]: cover[o131,s8] + cover[o131,s11]
   + cover[o131,s12] <= 1
 C_few_facility_per_spill[o131,s11]: cover[o131,s8] + cover[o131,s11]
   + cover[o131,s12] <= 1
 C_few_facility_per_spill[o131,s12]: cover[o131,s8] + cover[o131,s11]
   + cover[o131,s12] <= 1
 C_few_facility_per_spill[o223,s1]: cover[o223,s1] <= 1
 C_few_facility_per_spill[o139,s8]: cover[o139,s8] + cover[o139,s11]
   + cover[o139,s12] <= 1
 C_few_facility_per_spill[o139,s11]: cover[o139,s8] + cover[o139,s11]
   + cover[o139,s12] <= 1
 C_few_facility_per_spill[o139,s12]: cover[o139,s8] + cover[o139,s11]
   + cover[o139,s12] <= 1
 C_few_facility_per_spill[o24,s1]: cover[o24,s1] <= 1
 C_few_facility_per_spill[o211,s5]: cover[o211,s5] <= 1
 C_few_facility_per_spill[o53,s8]: cover[o53,s8] + cover[o53,s11] <= 1
 C_few_facility_per_spill[o53,s11]: cover[o53,s8] + cover[o53,s11] <= 1
 C_few_facility_per_spill[o22,s1]: cover[o22,s1] <= 1
 C_few_facility_per_spill[o210,s5]: cover[o210,s5] <= 1
 C_few_facility_per_spill[o66,s8]: cover[o66,s8] + cover[o66,s11] <= 1
 C_few_facility_per_spill[o66,s11]: cover[o66,s8] + cover[o66,s11] <= 1
 C_few_facility_per_spill[o116,s12]: cover[o116,s12] <= 1
 C_few_facility_per_spill[o114,s12]: cover[o114,s12] <= 1
 C_few_facility_per_spill[o29,s1]: cover[o29,s1] <= 1
 C_few_facility_per_spill[o215,s5]: cover[o215,s5] <= 1
 C_few_facility_per_spill[o79,s19]: cover[o79,s19] <= 1
 C_few_facility_per_spill[o218,s5]: cover[o218,s5] <= 1
 C_few_facility_per_spill[o151,s5]: cover[o151,s5] <= 1
 C_few_facility_per_spill[o126,s12]: cover[o126,s12] <= 1
 C_few_facility_per_spill[o158,s5]: cover[o158,s5] <= 1
 C_few_facility_per_spill[o182,s1]: cover[o182,s1] <= 1
 C_few_facility_per_spill[o192,s1]: cover[o192,s1] <= 1
 C_few_facility_per_spill[o16,s19]: cover[o16,s19] <= 1
 C_few_facility_per_spill[o198,s1]: cover[o198,s1] <= 1
 C_few_facility_per_spill[o163,s5]: cover[o163,s5] <= 1
 C_few_facility_per_spill[o20,s5]: cover[o20,s5] <= 1
 C_max_facility: select[s19] + select[s11] + select[s12] + select[s8]
   + select[s5] + select[s1] <= 5
 C_budget: 2e+06 select[s19] + 7e+06 select[s11] + 7e+06 select[s12]
   + 9e+06 select[s8] + 5e+06 select[s5] + 9e+06 select[s1] <= 1e+12
 C_open_facility[s19,m]: - 2e+24 select[s19] + deploy[o94,s19,m]
   + deploy[o203,s19,m] + deploy[o202,s19,m] + deploy[o4,s19,m]
   + deploy[o15,s19,m] + deploy[o91,s19,m] + deploy[o82,s19,m]
   + deploy[o78,s19,m] + deploy[o85,s19,m] + deploy[o75,s19,m]
   + deploy[o79,s19,m] + deploy[o16,s19,m] <= 0
 C_open_facility[s19,c]: - 2e+25 select[s19] + deploy[o94,s19,c]
   + deploy[o203,s19,c] + deploy[o202,s19,c] + deploy[o4,s19,c]
   + deploy[o15,s19,c] + deploy[o91,s19,c] + deploy[o82,s19,c]
   + deploy[o78,s19,c] + deploy[o85,s19,c] + deploy[o75,s19,c]
   + deploy[o79,s19,c] + deploy[o16,s19,c] <= 0
 C_open_facility[s19,i]: - 1e+25 select[s19] + deploy[o94,s19,i]
   + deploy[o203,s19,i] + deploy[o202,s19,i] + deploy[o4,s19,i]
   + deploy[o15,s19,i] + deploy[o91,s19,i] + deploy[o82,s19,i]
   + deploy[o78,s19,i] + deploy[o85,s19,i] + deploy[o75,s19,i]
   + deploy[o79,s19,i] + deploy[o16,s19,i] <= 0
 C_open_facility[s11,m]: - 8e+24 select[s11] + deploy[o67,s11,m]
   + deploy[o52,s11,m] + deploy[o135,s11,m] + deploy[o133,s11,m]
   + deploy[o1,s11,m] + deploy[o136,s11,m] + deploy[o68,s11,m]
   + deploy[o58,s11,m] + deploy[o69,s11,m] + deploy[o130,s11,m]
   + deploy[o64,s11,m] + deploy[o132,s11,m] + deploy[o134,s11,m]
   + deploy[o14,s11,m] + deploy[o131,s11,m] + deploy[o139,s11,m]
   + deploy[o53,s11,m] + deploy[o66,s11,m] <= 0
 C_open_facility[s11,c]: - 4e+24 select[s11] + deploy[o67,s11,c]
   + deploy[o52,s11,c] + deploy[o135,s11,c] + deploy[o133,s11,c]
   + deploy[o1,s11,c] + deploy[o136,s11,c] + deploy[o68,s11,c]
   + deploy[o58,s11,c] + deploy[o69,s11,c] + deploy[o130,s11,c]
   + deploy[o64,s11,c] + deploy[o132,s11,c] + deploy[o134,s11,c]
   + deploy[o14,s11,c] + deploy[o131,s11,c] + deploy[o139,s11,c]
   + deploy[o53,s11,c] + deploy[o66,s11,c] <= 0
 C_open_facility[s11,i]: - 2e+24 select[s11] + deploy[o67,s11,i]
   + deploy[o52,s11,i] + deploy[o135,s11,i] + deploy[o133,s11,i]
   + deploy[o1,s11,i] + deploy[o136,s11,i] + deploy[o68,s11,i]
   + deploy[o58,s11,i] + deploy[o69,s11,i] + deploy[o130,s11,i]
   + deploy[o64,s11,i] + deploy[o132,s11,i] + deploy[o134,s11,i]
   + deploy[o14,s11,i] + deploy[o131,s11,i] + deploy[o139,s11,i]
   + deploy[o53,s11,i] + deploy[o66,s11,i] <= 0
 C_open_facility[s12,m]: - 1.4e+25 select[s12] + deploy[o8,s12,m]
   + deploy[o108,s12,m] + deploy[o52,s12,m] + deploy[o135,s12,m]
   + deploy[o101,s12,m] + deploy[o133,s12,m] + deploy[o129,s12,m]
   + deploy[o136,s12,m] + deploy[o118,s12,m] + deploy[o122,s12,m]
   + deploy[o9,s12,m] + deploy[o51,s12,m] + deploy[o127,s12,m]
   + deploy[o12,s12,m] + deploy[o130,s12,m] + deploy[o128,s12,m]
   + deploy[o105,s12,m] + deploy[o102,s12,m] + deploy[o132,s12,m]
   + deploy[o123,s12,m] + deploy[o103,s12,m] + deploy[o134,s12,m]
   + deploy[o131,s12,m] + deploy[o139,s12,m] + deploy[o116,s12,m]
   + deploy[o114,s12,m] + deploy[o126,s12,m] <= 0
 C_open_facility[s12,c]: - 1.6e+25 select[s12] + deploy[o8,s12,c]
   + deploy[o108,s12,c] + deploy[o52,s12,c] + deploy[o135,s12,c]
   + deploy[o101,s12,c] + deploy[o133,s12,c] + deploy[o129,s12,c]
   + deploy[o136,s12,c] + deploy[o118,s12,c] + deploy[o122,s12,c]
   + deploy[o9,s12,c] + deploy[o51,s12,c] + deploy[o127,s12,c]
   + deploy[o12,s12,c] + deploy[o130,s12,c] + deploy[o128,s12,c]
   + deploy[o105,s12,c] + deploy[o102,s12,c] + deploy[o132,s12,c]
   + deploy[o123,s12,c] + deploy[o103,s12,c] + deploy[o134,s12,c]
   + deploy[o131,s12,c] + deploy[o139,s12,c] + deploy[o116,s12,c]
   + deploy[o114,s12,c] + deploy[o126,s12,c] <= 0
 C_open_facility[s12,i]: - 1.6e+25 select[s12] + deploy[o8,s12,i]
   + deploy[o108,s12,i] + deploy[o52,s12,i] + deploy[o135,s12,i]
   + deploy[o101,s12,i] + deploy[o133,s12,i] + deploy[o129,s12,i]
   + deploy[o136,s12,i] + deploy[o118,s12,i] + deploy[o122,s12,i]
   + deploy[o9,s12,i] + deploy[o51,s12,i] + deploy[o127,s12,i]
   + deploy[o12,s12,i] + deploy[o130,s12,i] + deploy[o128,s12,i]
   + deploy[o105,s12,i] + deploy[o102,s12,i] + deploy[o132,s12,i]
   + deploy[o123,s12,i] + deploy[o103,s12,i] + deploy[o134,s12,i]
   + deploy[o131,s12,i] + deploy[o139,s12,i] + deploy[o116,s12,i]
   + deploy[o114,s12,i] + deploy[o126,s12,i] <= 0
 C_open_facility[s8,m]: - 1.8e+25 select[s8] + deploy[o67,s8,m]
   + deploy[o135,s8,m] + deploy[o133,s8,m] + deploy[o1,s8,m]
   + deploy[o136,s8,m] + deploy[o68,s8,m] + deploy[o58,s8,m]
   + deploy[o130,s8,m] + deploy[o64,s8,m] + deploy[o132,s8,m]
   + deploy[o134,s8,m] + deploy[o14,s8,m] + deploy[o131,s8,m]
   + deploy[o139,s8,m] + deploy[o53,s8,m] + deploy[o66,s8,m] <= 0
 C_open_facility[s8,c]: - 1.2e+25 select[s8] + deploy[o67,s8,c]
   + deploy[o135,s8,c] + deploy[o133,s8,c] + deploy[o1,s8,c]
   + deploy[o136,s8,c] + deploy[o68,s8,c] + deploy[o58,s8,c]
   + deploy[o130,s8,c] + deploy[o64,s8,c] + deploy[o132,s8,c]
   + deploy[o134,s8,c] + deploy[o14,s8,c] + deploy[o131,s8,c]
   + deploy[o139,s8,c] + deploy[o53,s8,c] + deploy[o66,s8,c] <= 0
 C_open_facility[s8,i]: - 2e+24 select[s8] + deploy[o67,s8,i]
   + deploy[o135,s8,i] + deploy[o133,s8,i] + deploy[o1,s8,i]
   + deploy[o136,s8,i] + deploy[o68,s8,i] + deploy[o58,s8,i]
   + deploy[o130,s8,i] + deploy[o64,s8,i] + deploy[o132,s8,i]
   + deploy[o134,s8,i] + deploy[o14,s8,i] + deploy[o131,s8,i]
   + deploy[o139,s8,i] + deploy[o53,s8,i] + deploy[o66,s8,i] <= 0
 C_open_facility[s5,m]: - 4e+24 select[s5] + deploy[o21,s5,m]
   + deploy[o193,s5,m] + deploy[o162,s5,m] + deploy[o149,s5,m]
   + deploy[o212,s5,m] + deploy[o205,s5,m] + deploy[o148,s5,m]
   + deploy[o207,s5,m] + deploy[o18,s5,m] + deploy[o208,s5,m]
   + deploy[o159,s5,m] + deploy[o213,s5,m] + deploy[o211,s5,m]
   + deploy[o210,s5,m] + deploy[o215,s5,m] + deploy[o218,s5,m]
   + deploy[o151,s5,m] + deploy[o158,s5,m] + deploy[o163,s5,m]
   + deploy[o20,s5,m] <= 0
 C_open_facility[s5,c]: - 8e+24 select[s5] + deploy[o21,s5,c]
   + deploy[o193,s5,c] + deploy[o162,s5,c] + deploy[o149,s5,c]
   + deploy[o212,s5,c] + deploy[o205,s5,c] + deploy[o148,s5,c]
   + deploy[o207,s5,c] + deploy[o18,s5,c] + deploy[o208,s5,c]
   + deploy[o159,s5,c] + deploy[o213,s5,c] + deploy[o211,s5,c]
   + deploy[o210,s5,c] + deploy[o215,s5,c] + deploy[o218,s5,c]
   + deploy[o151,s5,c] + deploy[o158,s5,c] + deploy[o163,s5,c]
   + deploy[o20,s5,c] <= 0
 C_open_facility[s5,i]: - 4e+24 select[s5] + deploy[o21,s5,i]
   + deploy[o193,s5,i] + deploy[o162,s5,i] + deploy[o149,s5,i]
   + deploy[o212,s5,i] + deploy[o205,s5,i] + deploy[o148,s5,i]
   + deploy[o207,s5,i] + deploy[o18,s5,i] + deploy[o208,s5,i]
   + deploy[o159,s5,i] + deploy[o213,s5,i] + deploy[o211,s5,i]
   + deploy[o210,s5,i] + deploy[o215,s5,i] + deploy[o218,s5,i]
   + deploy[o151,s5,i] + deploy[o158,s5,i] + deploy[o163,s5,i]
   + deploy[o20,s5,i] <= 0
 C_open_facility[s1,m]: - 1.4e+25 select[s1] + deploy[o25,s1,m]
   + deploy[o187,s1,m] + deploy[o30,s1,m] + deploy[o183,s1,m]
   + deploy[o37,s1,m] + deploy[o26,s1,m] + deploy[o223,s1,m]
   + deploy[o24,s1,m] + deploy[o22,s1,m] + deploy[o29,s1,m]
   + deploy[o182,s1,m] + deploy[o192,s1,m] + deploy[o198,s1,m] <= 0
 C_open_facility[s1,c]: - 1.4e+25 select[s1] + deploy[o25,s1,c]
   + deploy[o187,s1,c] + deploy[o30,s1,c] + deploy[o183,s1,c]
   + deploy[o37,s1,c] + deploy[o26,s1,c] + deploy[o223,s1,c]
   + deploy[o24,s1,c] + deploy[o22,s1,c] + deploy[o29,s1,c]
   + deploy[o182,s1,c] + deploy[o192,s1,c] + deploy[o198,s1,c] <= 0
 C_open_facility[s1,i]: - 1e+25 select[s1] + deploy[o25,s1,i]
   + deploy[o187,s1,i] + deploy[o30,s1,i] + deploy[o183,s1,i]
   + deploy[o37,s1,i] + deploy[o26,s1,i] + deploy[o223,s1,i]
   + deploy[o24,s1,i] + deploy[o22,s1,i] + deploy[o29,s1,i]
   + deploy[o182,s1,i] + deploy[o192,s1,i] + deploy[o198,s1,i] <= 0
 C_deploy_demand[o21,s5,m]: deploy[o21,s5,m] <= 20
 C_deploy_demand[o21,s5,c]: deploy[o21,s5,c] <= 0
 C_deploy_demand[o21,s5,i]: deploy[o21,s5,i] <= 0
 C_deploy_demand[o8,s12,m]: deploy[o8,s12,m] <= 0
 C_deploy_demand[o8,s12,c]: deploy[o8,s12,c] <= 31
 C_deploy_demand[o8,s12,i]: deploy[o8,s12,i] <= 0
 C_deploy_demand[o67,s8,m]: deploy[o67,s8,m] <= 0
 C_deploy_demand[o67,s8,c]: deploy[o67,s8,c] <= 110
 C_deploy_demand[o67,s8,i]: deploy[o67,s8,i] <= 0
 C_deploy_demand[o67,s11,m]: deploy[o67,s11,m] <= 0
 C_deploy_demand[o67,s11,c]: deploy[o67,s11,c] <= 110
 C_deploy_demand[o67,s11,i]: deploy[o67,s11,i] <= 0
 C_deploy_demand[o94,s19,m]: deploy[o94,s19,m] <= 0
 C_deploy_demand[o94,s19,c]: deploy[o94,s19,c] <= 110
 C_deploy_demand[o94,s19,i]: deploy[o94,s19,i] <= 0
 C_deploy_demand[o108,s12,m]: deploy[o108,s12,m] <= 0
 C_deploy_demand[o108,s12,c]: deploy[o108,s12,c] <= 5
 C_deploy_demand[o108,s12,i]: deploy[o108,s12,i] <= 0
 C_deploy_demand[o52,s11,m]: deploy[o52,s11,m] <= 2
 C_deploy_demand[o52,s11,c]: deploy[o52,s11,c] <= 0
 C_deploy_demand[o52,s11,i]: deploy[o52,s11,i] <= 0
 C_deploy_demand[o52,s12,m]: deploy[o52,s12,m] <= 2
 C_deploy_demand[o52,s12,c]: deploy[o52,s12,c] <= 0
 C_deploy_demand[o52,s12,i]: deploy[o52,s12,i] <= 0
 C_deploy_demand[o135,s8,m]: deploy[o135,s8,m] <= 2
 C_deploy_demand[o135,s8,c]: deploy[o135,s8,c] <= 0
 C_deploy_demand[o135,s8,i]: deploy[o135,s8,i] <= 0
 C_deploy_demand[o135,s11,m]: deploy[o135,s11,m] <= 2
 C_deploy_demand[o135,s11,c]: deploy[o135,s11,c] <= 0
 C_deploy_demand[o135,s11,i]: deploy[o135,s11,i] <= 0
 C_deploy_demand[o135,s12,m]: deploy[o135,s12,m] <= 2
 C_deploy_demand[o135,s12,c]: deploy[o135,s12,c] <= 0
 C_deploy_demand[o135,s12,i]: deploy[o135,s12,i] <= 0
 C_deploy_demand[o193,s5,m]: deploy[o193,s5,m] <= 0
 C_deploy_demand[o193,s5,c]: deploy[o193,s5,c] <= 0
 C_deploy_demand[o193,s5,i]: deploy[o193,s5,i] <= 37
 C_deploy_demand[o101,s12,m]: deploy[o101,s12,m] <= 20
 C_deploy_demand[o101,s12,c]: deploy[o101,s12,c] <= 0
 C_deploy_demand[o101,s12,i]: deploy[o101,s12,i] <= 0
 C_deploy_demand[o133,s8,m]: deploy[o133,s8,m] <= 0
 C_deploy_demand[o133,s8,c]: deploy[o133,s8,c] <= 0
 C_deploy_demand[o133,s8,i]: deploy[o133,s8,i] <= 157
 C_deploy_demand[o133,s11,m]: deploy[o133,s11,m] <= 0
 C_deploy_demand[o133,s11,c]: deploy[o133,s11,c] <= 0
 C_deploy_demand[o133,s11,i]: deploy[o133,s11,i] <= 157
 C_deploy_demand[o133,s12,m]: deploy[o133,s12,m] <= 0
 C_deploy_demand[o133,s12,c]: deploy[o133,s12,c] <= 0
 C_deploy_demand[o133,s12,i]: deploy[o133,s12,i] <= 157
 C_deploy_demand[o129,s12,m]: deploy[o129,s12,m] <= 100
 C_deploy_demand[o129,s12,c]: deploy[o129,s12,c] <= 0
 C_deploy_demand[o129,s12,i]: deploy[o129,s12,i] <= 0
 C_deploy_demand[o1,s8,m]: deploy[o1,s8,m] <= 20
 C_deploy_demand[o1,s8,c]: deploy[o1,s8,c] <= 0
 C_deploy_demand[o1,s8,i]: deploy[o1,s8,i] <= 0
 C_deploy_demand[o1,s11,m]: deploy[o1,s11,m] <= 20
 C_deploy_demand[o1,s11,c]: deploy[o1,s11,c] <= 0
 C_deploy_demand[o1,s11,i]: deploy[o1,s11,i] <= 0
 C_deploy_demand[o162,s5,m]: deploy[o162,s5,m] <= 2
 C_deploy_demand[o162,s5,c]: deploy[o162,s5,c] <= 0
 C_deploy_demand[o162,s5,i]: deploy[o162,s5,i] <= 0
 C_deploy_demand[o25,s1,m]: deploy[o25,s1,m] <= 100
 C_deploy_demand[o25,s1,c]: deploy[o25,s1,c] <= 0
 C_deploy_demand[o25,s1,i]: deploy[o25,s1,i] <= 0
 C_deploy_demand[o136,s8,m]: deploy[o136,s8,m] <= 0
 C_deploy_demand[o136,s8,c]: deploy[o136,s8,c] <= 5
 C_deploy_demand[o136,s8,i]: deploy[o136,s8,i] <= 0
 C_deploy_demand[o136,s11,m]: deploy[o136,s11,m] <= 0
 C_deploy_demand[o136,s11,c]: deploy[o136,s11,c] <= 5
 C_deploy_demand[o136,s11,i]: deploy[o136,s11,i] <= 0
 C_deploy_demand[o136,s12,m]: deploy[o136,s12,m] <= 0
 C_deploy_demand[o136,s12,c]: deploy[o136,s12,c] <= 5
 C_deploy_demand[o136,s12,i]: deploy[o136,s12,i] <= 0
 C_deploy_demand[o118,s12,m]: deploy[o118,s12,m] <= 0
 C_deploy_demand[o118,s12,c]: deploy[o118,s12,c] <= 110
 C_deploy_demand[o118,s12,i]: deploy[o118,s12,i] <= 0
 C_deploy_demand[o122,s12,m]: deploy[o122,s12,m] <= 0
 C_deploy_demand[o122,s12,c]: deploy[o122,s12,c] <= 31
 C_deploy_demand[o122,s12,i]: deploy[o122,s12,i] <= 0
 C_deploy_demand[o9,s12,m]: deploy[o9,s12,m] <= 0
 C_deploy_demand[o9,s12,c]: deploy[o9,s12,c] <= 0
 C_deploy_demand[o9,s12,i]: deploy[o9,s12,i] <= 7
 C_deploy_demand[o68,s8,m]: deploy[o68,s8,m] <= 100
 C_deploy_demand[o68,s8,c]: deploy[o68,s8,c] <= 0
 C_deploy_demand[o68,s8,i]: deploy[o68,s8,i] <= 0
 C_deploy_demand[o68,s11,m]: deploy[o68,s11,m] <= 100
 C_deploy_demand[o68,s11,c]: deploy[o68,s11,c] <= 0
 C_deploy_demand[o68,s11,i]: deploy[o68,s11,i] <= 0
 C_deploy_demand[o203,s19,m]: deploy[o203,s19,m] <= 0
 C_deploy_demand[o203,s19,c]: deploy[o203,s19,c] <= 110
 C_deploy_demand[o203,s19,i]: deploy[o203,s19,i] <= 0
 C_deploy_demand[o187,s1,m]: deploy[o187,s1,m] <= 100
 C_deploy_demand[o187,s1,c]: deploy[o187,s1,c] <= 0
 C_deploy_demand[o187,s1,i]: deploy[o187,s1,i] <= 0
 C_deploy_demand[o149,s5,m]: deploy[o149,s5,m] <= 0
 C_deploy_demand[o149,s5,c]: deploy[o149,s5,c] <= 110
 C_deploy_demand[o149,s5,i]: deploy[o149,s5,i] <= 0
 C_deploy_demand[o58,s8,m]: deploy[o58,s8,m] <= 0
 C_deploy_demand[o58,s8,c]: deploy[o58,s8,c] <= 0
 C_deploy_demand[o58,s8,i]: deploy[o58,s8,i] <= 37
 C_deploy_demand[o58,s11,m]: deploy[o58,s11,m] <= 0
 C_deploy_demand[o58,s11,c]: deploy[o58,s11,c] <= 0
 C_deploy_demand[o58,s11,i]: deploy[o58,s11,i] <= 37
 C_deploy_demand[o51,s12,m]: deploy[o51,s12,m] <= 0
 C_deploy_demand[o51,s12,c]: deploy[o51,s12,c] <= 0
 C_deploy_demand[o51,s12,i]: deploy[o51,s12,i] <= 157
 C_deploy_demand[o127,s12,m]: deploy[o127,s12,m] <= 0
 C_deploy_demand[o127,s12,c]: deploy[o127,s12,c] <= 0
 C_deploy_demand[o127,s12,i]: deploy[o127,s12,i] <= 157
 C_deploy_demand[o202,s19,m]: deploy[o202,s19,m] <= 20
 C_deploy_demand[o202,s19,c]: deploy[o202,s19,c] <= 0
 C_deploy_demand[o202,s19,i]: deploy[o202,s19,i] <= 0
 C_deploy_demand[o4,s19,m]: deploy[o4,s19,m] <= 0
 C_deploy_demand[o4,s19,c]: deploy[o4,s19,c] <= 0
 C_deploy_demand[o4,s19,i]: deploy[o4,s19,i] <= 7
 C_deploy_demand[o15,s19,m]: deploy[o15,s19,m] <= 0
 C_deploy_demand[o15,s19,c]: deploy[o15,s19,c] <= 5
 C_deploy_demand[o15,s19,i]: deploy[o15,s19,i] <= 0
 C_deploy_demand[o212,s5,m]: deploy[o212,s5,m] <= 0
 C_deploy_demand[o212,s5,c]: deploy[o212,s5,c] <= 0
 C_deploy_demand[o212,s5,i]: deploy[o212,s5,i] <= 7
 C_deploy_demand[o205,s5,m]: deploy[o205,s5,m] <= 2
 C_deploy_demand[o205,s5,c]: deploy[o205,s5,c] <= 0
 C_deploy_demand[o205,s5,i]: deploy[o205,s5,i] <= 0
 C_deploy_demand[o12,s12,m]: deploy[o12,s12,m] <= 2
 C_deploy_demand[o12,s12,c]: deploy[o12,s12,c] <= 0
 C_deploy_demand[o12,s12,i]: deploy[o12,s12,i] <= 0
 C_deploy_demand[o91,s19,m]: deploy[o91,s19,m] <= 20
 C_deploy_demand[o91,s19,c]: deploy[o91,s19,c] <= 0
 C_deploy_demand[o91,s19,i]: deploy[o91,s19,i] <= 0
 C_deploy_demand[o30,s1,m]: deploy[o30,s1,m] <= 0
 C_deploy_demand[o30,s1,c]: deploy[o30,s1,c] <= 0
 C_deploy_demand[o30,s1,i]: deploy[o30,s1,i] <= 157
 C_deploy_demand[o69,s11,m]: deploy[o69,s11,m] <= 20
 C_deploy_demand[o69,s11,c]: deploy[o69,s11,c] <= 0
 C_deploy_demand[o69,s11,i]: deploy[o69,s11,i] <= 0
 C_deploy_demand[o148,s5,m]: deploy[o148,s5,m] <= 20
 C_deploy_demand[o148,s5,c]: deploy[o148,s5,c] <= 0
 C_deploy_demand[o148,s5,i]: deploy[o148,s5,i] <= 0
 C_deploy_demand[o130,s8,m]: deploy[o130,s8,m] <= 0
 C_deploy_demand[o130,s8,c]: deploy[o130,s8,c] <= 31
 C_deploy_demand[o130,s8,i]: deploy[o130,s8,i] <= 0
 C_deploy_demand[o130,s11,m]: deploy[o130,s11,m] <= 0
 C_deploy_demand[o130,s11,c]: deploy[o130,s11,c] <= 31
 C_deploy_demand[o130,s11,i]: deploy[o130,s11,i] <= 0
 C_deploy_demand[o130,s12,m]: deploy[o130,s12,m] <= 0
 C_deploy_demand[o130,s12,c]: deploy[o130,s12,c] <= 31
 C_deploy_demand[o130,s12,i]: deploy[o130,s12,i] <= 0
 C_deploy_demand[o128,s12,m]: deploy[o128,s12,m] <= 20
 C_deploy_demand[o128,s12,c]: deploy[o128,s12,c] <= 0
 C_deploy_demand[o128,s12,i]: deploy[o128,s12,i] <= 0
 C_deploy_demand[o64,s8,m]: deploy[o64,s8,m] <= 0
 C_deploy_demand[o64,s8,c]: deploy[o64,s8,c] <= 5
 C_deploy_demand[o64,s8,i]: deploy[o64,s8,i] <= 0
 C_deploy_demand[o64,s11,m]: deploy[o64,s11,m] <= 0
 C_deploy_demand[o64,s11,c]: deploy[o64,s11,c] <= 5
 C_deploy_demand[o64,s11,i]: deploy[o64,s11,i] <= 0
 C_deploy_demand[o82,s19,m]: deploy[o82,s19,m] <= 20
 C_deploy_demand[o82,s19,c]: deploy[o82,s19,c] <= 0
 C_deploy_demand[o82,s19,i]: deploy[o82,s19,i] <= 0
 C_deploy_demand[o105,s12,m]: deploy[o105,s12,m] <= 2
 C_deploy_demand[o105,s12,c]: deploy[o105,s12,c] <= 0
 C_deploy_demand[o105,s12,i]: deploy[o105,s12,i] <= 0
 C_deploy_demand[o207,s5,m]: deploy[o207,s5,m] <= 20
 C_deploy_demand[o207,s5,c]: deploy[o207,s5,c] <= 0
 C_deploy_demand[o207,s5,i]: deploy[o207,s5,i] <= 0
 C_deploy_demand[o78,s19,m]: deploy[o78,s19,m] <= 0
 C_deploy_demand[o78,s19,c]: deploy[o78,s19,c] <= 0
 C_deploy_demand[o78,s19,i]: deploy[o78,s19,i] <= 7
 C_deploy_demand[o18,s5,m]: deploy[o18,s5,m] <= 0
 C_deploy_demand[o18,s5,c]: deploy[o18,s5,c] <= 0
 C_deploy_demand[o18,s5,i]: deploy[o18,s5,i] <= 37
 C_deploy_demand[o102,s12,m]: deploy[o102,s12,m] <= 0
 C_deploy_demand[o102,s12,c]: deploy[o102,s12,c] <= 0
 C_deploy_demand[o102,s12,i]: deploy[o102,s12,i] <= 7
 C_deploy_demand[o132,s8,m]: deploy[o132,s8,m] <= 0
 C_deploy_demand[o132,s8,c]: deploy[o132,s8,c] <= 0
 C_deploy_demand[o132,s8,i]: deploy[o132,s8,i] <= 37
 C_deploy_demand[o132,s11,m]: deploy[o132,s11,m] <= 0
 C_deploy_demand[o132,s11,c]: deploy[o132,s11,c] <= 0
 C_deploy_demand[o132,s11,i]: deploy[o132,s11,i] <= 37
 C_deploy_demand[o132,s12,m]: deploy[o132,s12,m] <= 0
 C_deploy_demand[o132,s12,c]: deploy[o132,s12,c] <= 0
 C_deploy_demand[o132,s12,i]: deploy[o132,s12,i] <= 37
 C_deploy_demand[o183,s1,m]: deploy[o183,s1,m] <= 0
 C_deploy_demand[o183,s1,c]: deploy[o183,s1,c] <= 0
 C_deploy_demand[o183,s1,i]: deploy[o183,s1,i] <= 7
 C_deploy_demand[o208,s5,m]: deploy[o208,s5,m] <= 100
 C_deploy_demand[o208,s5,c]: deploy[o208,s5,c] <= 0
 C_deploy_demand[o208,s5,i]: deploy[o208,s5,i] <= 0
 C_deploy_demand[o123,s12,m]: deploy[o123,s12,m] <= 0
 C_deploy_demand[o123,s12,c]: deploy[o123,s12,c] <= 5
 C_deploy_demand[o123,s12,i]: deploy[o123,s12,i] <= 0
 C_deploy_demand[o159,s5,m]: deploy[o159,s5,m] <= 0
 C_deploy_demand[o159,s5,c]: deploy[o159,s5,c] <= 110
 C_deploy_demand[o159,s5,i]: deploy[o159,s5,i] <= 0
 C_deploy_demand[o37,s1,m]: deploy[o37,s1,m] <= 0
 C_deploy_demand[o37,s1,c]: deploy[o37,s1,c] <= 5
 C_deploy_demand[o37,s1,i]: deploy[o37,s1,i] <= 0
 C_deploy_demand[o85,s19,m]: deploy[o85,s19,m] <= 100
 C_deploy_demand[o85,s19,c]: deploy[o85,s19,c] <= 0
 C_deploy_demand[o85,s19,i]: deploy[o85,s19,i] <= 0
 C_deploy_demand[o75,s19,m]: deploy[o75,s19,m] <= 100
 C_deploy_demand[o75,s19,c]: deploy[o75,s19,c] <= 0
 C_deploy_demand[o75,s19,i]: deploy[o75,s19,i] <= 0
 C_deploy_demand[o26,s1,m]: deploy[o26,s1,m] <= 0
 C_deploy_demand[o26,s1,c]: deploy[o26,s1,c] <= 0
 C_deploy_demand[o26,s1,i]: deploy[o26,s1,i] <= 37
 C_deploy_demand[o103,s12,m]: deploy[o103,s12,m] <= 0
 C_deploy_demand[o103,s12,c]: deploy[o103,s12,c] <= 5
 C_deploy_demand[o103,s12,i]: deploy[o103,s12,i] <= 0
 C_deploy_demand[o213,s5,m]: deploy[o213,s5,m] <= 0
 C_deploy_demand[o213,s5,c]: deploy[o213,s5,c] <= 110
 C_deploy_demand[o213,s5,i]: deploy[o213,s5,i] <= 0
 C_deploy_demand[o134,s8,m]: deploy[o134,s8,m] <= 20
 C_deploy_demand[o134,s8,c]: deploy[o134,s8,c] <= 0
 C_deploy_demand[o134,s8,i]: deploy[o134,s8,i] <= 0
 C_deploy_demand[o134,s11,m]: deploy[o134,s11,m] <= 20
 C_deploy_demand[o134,s11,c]: deploy[o134,s11,c] <= 0
 C_deploy_demand[o134,s11,i]: deploy[o134,s11,i] <= 0
 C_deploy_demand[o134,s12,m]: deploy[o134,s12,m] <= 20
 C_deploy_demand[o134,s12,c]: deploy[o134,s12,c] <= 0
 C_deploy_demand[o134,s12,i]: deploy[o134,s12,i] <= 0
 C_deploy_demand[o14,s8,m]: deploy[o14,s8,m] <= 0
 C_deploy_demand[o14,s8,c]: deploy[o14,s8,c] <= 5
 C_deploy_demand[o14,s8,i]: deploy[o14,s8,i] <= 0
 C_deploy_demand[o14,s11,m]: deploy[o14,s11,m] <= 0
 C_deploy_demand[o14,s11,c]: deploy[o14,s11,c] <= 5
 C_deploy_demand[o14,s11,i]: deploy[o14,s11,i] <= 0
 C_deploy_demand[o131,s8,m]: deploy[o131,s8,m] <= 0
 C_deploy_demand[o131,s8,c]: deploy[o131,s8,c] <= 31
 C_deploy_demand[o131,s8,i]: deploy[o131,s8,i] <= 0
 C_deploy_demand[o131,s11,m]: deploy[o131,s11,m] <= 0
 C_deploy_demand[o131,s11,c]: deploy[o131,s11,c] <= 31
 C_deploy_demand[o131,s11,i]: deploy[o131,s11,i] <= 0
 C_deploy_demand[o131,s12,m]: deploy[o131,s12,m] <= 0
 C_deploy_demand[o131,s12,c]: deploy[o131,s12,c] <= 31
 C_deploy_demand[o131,s12,i]: deploy[o131,s12,i] <= 0
 C_deploy_demand[o223,s1,m]: deploy[o223,s1,m] <= 0
 C_deploy_demand[o223,s1,c]: deploy[o223,s1,c] <= 5
 C_deploy_demand[o223,s1,i]: deploy[o223,s1,i] <= 0
 C_deploy_demand[o139,s8,m]: deploy[o139,s8,m] <= 0
 C_deploy_demand[o139,s8,c]: deploy[o139,s8,c] <= 0
 C_deploy_demand[o139,s8,i]: deploy[o139,s8,i] <= 157
 C_deploy_demand[o139,s11,m]: deploy[o139,s11,m] <= 0
 C_deploy_demand[o139,s11,c]: deploy[o139,s11,c] <= 0
 C_deploy_demand[o139,s11,i]: deploy[o139,s11,i] <= 157
 C_deploy_demand[o139,s12,m]: deploy[o139,s12,m] <= 0
 C_deploy_demand[o139,s12,c]: deploy[o139,s12,c] <= 0
 C_deploy_demand[o139,s12,i]: deploy[o139,s12,i] <= 157
 C_deploy_demand[o24,s1,m]: deploy[o24,s1,m] <= 2
 C_deploy_demand[o24,s1,c]: deploy[o24,s1,c] <= 0
 C_deploy_demand[o24,s1,i]: deploy[o24,s1,i] <= 0
 C_deploy_demand[o211,s5,m]: deploy[o211,s5,m] <= 0
 C_deploy_demand[o211,s5,c]: deploy[o211,s5,c] <= 5
 C_deploy_demand[o211,s5,i]: deploy[o211,s5,i] <= 0
 C_deploy_demand[o53,s8,m]: deploy[o53,s8,m] <= 20
 C_deploy_demand[o53,s8,c]: deploy[o53,s8,c] <= 0
 C_deploy_demand[o53,s8,i]: deploy[o53,s8,i] <= 0
 C_deploy_demand[o53,s11,m]: deploy[o53,s11,m] <= 20
 C_deploy_demand[o53,s11,c]: deploy[o53,s11,c] <= 0
 C_deploy_demand[o53,s11,i]: deploy[o53,s11,i] <= 0
 C_deploy_demand[o22,s1,m]: deploy[o22,s1,m] <= 100
 C_deploy_demand[o22,s1,c]: deploy[o22,s1,c] <= 0
 C_deploy_demand[o22,s1,i]: deploy[o22,s1,i] <= 0
 C_deploy_demand[o210,s5,m]: deploy[o210,s5,m] <= 0
 C_deploy_demand[o210,s5,c]: deploy[o210,s5,c] <= 0
 C_deploy_demand[o210,s5,i]: deploy[o210,s5,i] <= 37
 C_deploy_demand[o66,s8,m]: deploy[o66,s8,m] <= 0
 C_deploy_demand[o66,s8,c]: deploy[o66,s8,c] <= 31
 C_deploy_demand[o66,s8,i]: deploy[o66,s8,i] <= 0
 C_deploy_demand[o66,s11,m]: deploy[o66,s11,m] <= 0
 C_deploy_demand[o66,s11,c]: deploy[o66,s11,c] <= 31
 C_deploy_demand[o66,s11,i]: deploy[o66,s11,i] <= 0
 C_deploy_demand[o116,s12,m]: deploy[o116,s12,m] <= 20
 C_deploy_demand[o116,s12,c]: deploy[o116,s12,c] <= 0
 C_deploy_demand[o116,s12,i]: deploy[o116,s12,i] <= 0
 C_deploy_demand[o114,s12,m]: deploy[o114,s12,m] <= 0
 C_deploy_demand[o114,s12,c]: deploy[o114,s12,c] <= 0
 C_deploy_demand[o114,s12,i]: deploy[o114,s12,i] <= 7
 C_deploy_demand[o29,s1,m]: deploy[o29,s1,m] <= 0
 C_deploy_demand[o29,s1,c]: deploy[o29,s1,c] <= 0
 C_deploy_demand[o29,s1,i]: deploy[o29,s1,i] <= 37
 C_deploy_demand[o215,s5,m]: deploy[o215,s5,m] <= 2
 C_deploy_demand[o215,s5,c]: deploy[o215,s5,c] <= 0
 C_deploy_demand[o215,s5,i]: deploy[o215,s5,i] <= 0
 C_deploy_demand[o79,s19,m]: deploy[o79,s19,m] <= 0
 C_deploy_demand[o79,s19,c]: deploy[o79,s19,c] <= 110
 C_deploy_demand[o79,s19,i]: deploy[o79,s19,i] <= 0
 C_deploy_demand[o218,s5,m]: deploy[o218,s5,m] <= 0
 C_deploy_demand[o218,s5,c]: deploy[o218,s5,c] <= 0
 C_deploy_demand[o218,s5,i]: deploy[o218,s5,i] <= 37
 C_deploy_demand[o151,s5,m]: deploy[o151,s5,m] <= 100
 C_deploy_demand[o151,s5,c]: deploy[o151,s5,c] <= 0
 C_deploy_demand[o151,s5,i]: deploy[o151,s5,i] <= 0
 C_deploy_demand[o126,s12,m]: deploy[o126,s12,m] <= 100
 C_deploy_demand[o126,s12,c]: deploy[o126,s12,c] <= 0
 C_deploy_demand[o126,s12,i]: deploy[o126,s12,i] <= 0
 C_deploy_demand[o158,s5,m]: deploy[o158,s5,m] <= 0
 C_deploy_demand[o158,s5,c]: deploy[o158,s5,c] <= 31
 C_deploy_demand[o158,s5,i]: deploy[o158,s5,i] <= 0
 C_deploy_demand[o182,s1,m]: deploy[o182,s1,m] <= 20
 C_deploy_demand[o182,s1,c]: deploy[o182,s1,c] <= 0
 C_deploy_demand[o182,s1,i]: deploy[o182,s1,i] <= 0
 C_deploy_demand[o192,s1,m]: deploy[o192,s1,m] <= 2
 C_deploy_demand[o192,s1,c]: deploy[o192,s1,c] <= 0
 C_deploy_demand[o192,s1,i]: deploy[o192,s1,i] <= 0
 C_deploy_demand[o16,s19,m]: deploy[o16,s19,m] <= 0
 C_deploy_demand[o16,s19,c]: deploy[o16,s19,c] <= 0
 C_deploy_demand[o16,s19,i]: deploy[o16,s19,i] <= 157
 C_deploy_demand[o198,s1,m]: deploy[o198,s1,m] <= 0
 C_deploy_demand[o198,s1,c]: deploy[o198,s1,c] <= 5
 C_deploy_demand[o198,s1,i]: deploy[o198,s1,i] <= 0
 C_deploy_demand[o163,s5,m]: deploy[o163,s5,m] <= 0
 C_deploy_demand[o163,s5,c]: deploy[o163,s5,c] <= 0
 C_deploy_demand[o163,s5,i]: deploy[o163,s5,i] <= 157
 C_deploy_demand[o20,s5,m]: deploy[o20,s5,m] <= 0
 C_deploy_demand[o20,s5,c]: deploy[o20,s5,c] <= 31
 C_deploy_demand[o20,s5,i]: deploy[o20,s5,i] <= 0
Bounds
Binaries
 cover[o21,s5] cover[o8,s12] cover[o67,s8] cover[o67,s11] cover[o94,s19]
 cover[o108,s12] cover[o52,s11] cover[o52,s12] cover[o135,s8]
 cover[o135,s11] cover[o135,s12] cover[o193,s5] cover[o101,s12]
 cover[o133,s8] cover[o133,s11] cover[o133,s12] cover[o129,s12]
 cover[o1,s8] cover[o1,s11] cover[o162,s5] cover[o25,s1] cover[o136,s8]
 cover[o136,s11] cover[o136,s12] cover[o118,s12] cover[o122,s12]
 cover[o9,s12] cover[o68,s8] cover[o68,s11] cover[o203,s19] cover[o187,s1]
 cover[o149,s5] cover[o58,s8] cover[o58,s11] cover[o51,s12] cover[o127,s12]
 cover[o202,s19] cover[o4,s19] cover[o15,s19] cover[o212,s5] cover[o205,s5]
 cover[o12,s12] cover[o91,s19] cover[o30,s1] cover[o69,s11] cover[o148,s5]
 cover[o130,s8] cover[o130,s11] cover[o130,s12] cover[o128,s12]
 cover[o64,s8] cover[o64,s11] cover[o82,s19] cover[o105,s12] cover[o207,s5]
 cover[o78,s19] cover[o18,s5] cover[o102,s12] cover[o132,s8]
 cover[o132,s11] cover[o132,s12] cover[o183,s1] cover[o208,s5]
 cover[o123,s12] cover[o159,s5] cover[o37,s1] cover[o85,s19] cover[o75,s19]
 cover[o26,s1] cover[o103,s12] cover[o213,s5] cover[o134,s8]
 cover[o134,s11] cover[o134,s12] cover[o14,s8] cover[o14,s11]
 cover[o131,s8] cover[o131,s11] cover[o131,s12] cover[o223,s1]
 cover[o139,s8] cover[o139,s11] cover[o139,s12] cover[o24,s1]
 cover[o211,s5] cover[o53,s8] cover[o53,s11] cover[o22,s1] cover[o210,s5]
 cover[o66,s8] cover[o66,s11] cover[o116,s12] cover[o114,s12] cover[o29,s1]
 cover[o215,s5] cover[o79,s19] cover[o218,s5] cover[o151,s5]
 cover[o126,s12] cover[o158,s5] cover[o182,s1] cover[o192,s1]
 cover[o16,s19] cover[o198,s1] cover[o163,s5] cover[o20,s5] select[s19]
 select[s11] select[s12] select[s8] select[s5] select[s1]
End

------------------------------- Model Outputs ------------------------------
# Solution for model MIP-moo-LAMOSCAD
# Objective value = 1.0404343760991133e+03
cover[o21,s5] 1
cover[o8,s12] 1
cover[o67,s8] 0
cover[o67,s11] 1
cover[o94,s19] 1
cover[o108,s12] 1
cover[o52,s11] 0
cover[o52,s12] 1
cover[o135,s8] 0
cover[o135,s11] 1
cover[o135,s12] 0
cover[o193,s5] 1
cover[o101,s12] 1
cover[o133,s8] 0
cover[o133,s11] 1
cover[o133,s12] 0
cover[o129,s12] 1
cover[o1,s8] 0
cover[o1,s11] 1
cover[o162,s5] 1
cover[o25,s1] 1
cover[o136,s8] 0
cover[o136,s11] 1
cover[o136,s12] 0
cover[o118,s12] 1
cover[o122,s12] 1
cover[o9,s12] 1
cover[o68,s8] 0
cover[o68,s11] 1
cover[o203,s19] 1
cover[o187,s1] 1
cover[o149,s5] 1
cover[o58,s8] 0
cover[o58,s11] 1
cover[o51,s12] 1
cover[o127,s12] 1
cover[o202,s19] 1
cover[o4,s19] 1
cover[o15,s19] 1
cover[o212,s5] 1
cover[o205,s5] 1
cover[o12,s12] 1
cover[o91,s19] 1
cover[o30,s1] 1
cover[o69,s11] 1
cover[o148,s5] 1
cover[o130,s8] 0
cover[o130,s11] 0
cover[o130,s12] 1
cover[o128,s12] 1
cover[o64,s8] 0
cover[o64,s11] 1
cover[o82,s19] 1
cover[o105,s12] 1
cover[o207,s5] 1
cover[o78,s19] 1
cover[o18,s5] 1
cover[o102,s12] 1
cover[o132,s8] 0
cover[o132,s11] 1
cover[o132,s12] 0
cover[o183,s1] 1
cover[o208,s5] 1
cover[o123,s12] 1
cover[o159,s5] 1
cover[o37,s1] 1
cover[o85,s19] 1
cover[o75,s19] 1
cover[o26,s1] 1
cover[o103,s12] 1
cover[o213,s5] 1
cover[o134,s8] 0
cover[o134,s11] 1
cover[o134,s12] 0
cover[o14,s8] 0
cover[o14,s11] 1
cover[o131,s8] 0
cover[o131,s11] 1
cover[o131,s12] 0
cover[o223,s1] 1
cover[o139,s8] 0
cover[o139,s11] 1
cover[o139,s12] 0
cover[o24,s1] 1
cover[o211,s5] 1
cover[o53,s8] 0
cover[o53,s11] 1
cover[o22,s1] 1
cover[o210,s5] 1
cover[o66,s8] 0
cover[o66,s11] 1
cover[o116,s12] 1
cover[o114,s12] 1
cover[o29,s1] 1
cover[o215,s5] 1
cover[o79,s19] 1
cover[o218,s5] 1
cover[o151,s5] 1
cover[o126,s12] 1
cover[o158,s5] 1
cover[o182,s1] 1
cover[o192,s1] 1
cover[o16,s19] 1
cover[o198,s1] 1
cover[o163,s5] 1
cover[o20,s5] 1
select[s19] 1
select[s11] 1
select[s12] 1
select[s8] 0
select[s5] 1
select[s1] 1
deploy[o21,s5,m] 0
deploy[o21,s5,c] 0
deploy[o21,s5,i] 0
deploy[o8,s12,m] 0
deploy[o8,s12,c] 31
deploy[o8,s12,i] 0
deploy[o67,s8,m] 0
deploy[o67,s8,c] 0
deploy[o67,s8,i] 0
deploy[o67,s11,m] 0
deploy[o67,s11,c] 110
deploy[o67,s11,i] 0
deploy[o94,s19,m] 0
deploy[o94,s19,c] 110
deploy[o94,s19,i] 0
deploy[o108,s12,m] 0
deploy[o108,s12,c] 5
deploy[o108,s12,i] 0
deploy[o52,s11,m] 2
deploy[o52,s11,c] 0
deploy[o52,s11,i] 0
deploy[o52,s12,m] 2
deploy[o52,s12,c] 0
deploy[o52,s12,i] 0
deploy[o135,s8,m] 0
deploy[o135,s8,c] 0
deploy[o135,s8,i] 0
deploy[o135,s11,m] 2
deploy[o135,s11,c] 0
deploy[o135,s11,i] 0
deploy[o135,s12,m] 2
deploy[o135,s12,c] 0
deploy[o135,s12,i] 0
deploy[o193,s5,m] 0
deploy[o193,s5,c] 0
deploy[o193,s5,i] 37
deploy[o101,s12,m] 20
deploy[o101,s12,c] 0
deploy[o101,s12,i] 0
deploy[o133,s8,m] 0
deploy[o133,s8,c] 0
deploy[o133,s8,i] 0
deploy[o133,s11,m] 0
deploy[o133,s11,c] 0
deploy[o133,s11,i] 157
deploy[o133,s12,m] 0
deploy[o133,s12,c] 0
deploy[o133,s12,i] 157
deploy[o129,s12,m] 100
deploy[o129,s12,c] 0
deploy[o129,s12,i] 0
deploy[o1,s8,m] 0
deploy[o1,s8,c] 0
deploy[o1,s8,i] 0
deploy[o1,s11,m] 20
deploy[o1,s11,c] 0
deploy[o1,s11,i] 0
deploy[o162,s5,m] 0
deploy[o162,s5,c] 0
deploy[o162,s5,i] 0
deploy[o25,s1,m] 100
deploy[o25,s1,c] 0
deploy[o25,s1,i] 0
deploy[o136,s8,m] 0
deploy[o136,s8,c] 0
deploy[o136,s8,i] 0
deploy[o136,s11,m] 0
deploy[o136,s11,c] 5
deploy[o136,s11,i] 0
deploy[o136,s12,m] 0
deploy[o136,s12,c] 5
deploy[o136,s12,i] 0
deploy[o118,s12,m] 0
deploy[o118,s12,c] 110
deploy[o118,s12,i] 0
deploy[o122,s12,m] 0
deploy[o122,s12,c] 31
deploy[o122,s12,i] 0
deploy[o9,s12,m] 0
deploy[o9,s12,c] 0
deploy[o9,s12,i] 7
deploy[o68,s8,m] 0
deploy[o68,s8,c] 0
deploy[o68,s8,i] 0
deploy[o68,s11,m] 100
deploy[o68,s11,c] 0
deploy[o68,s11,i] 0
deploy[o203,s19,m] 0
deploy[o203,s19,c] 110
deploy[o203,s19,i] 0
deploy[o187,s1,m] 100
deploy[o187,s1,c] 0
deploy[o187,s1,i] 0
deploy[o149,s5,m] 0
deploy[o149,s5,c] 110
deploy[o149,s5,i] 0
deploy[o58,s8,m] 0
deploy[o58,s8,c] 0
deploy[o58,s8,i] 0
deploy[o58,s11,m] 0
deploy[o58,s11,c] 0
deploy[o58,s11,i] 37
deploy[o51,s12,m] 0
deploy[o51,s12,c] 0
deploy[o51,s12,i] 157
deploy[o127,s12,m] 0
deploy[o127,s12,c] 0
deploy[o127,s12,i] 157
deploy[o202,s19,m] 20
deploy[o202,s19,c] 0
deploy[o202,s19,i] 0
deploy[o4,s19,m] 0
deploy[o4,s19,c] 0
deploy[o4,s19,i] 0
deploy[o15,s19,m] 0
deploy[o15,s19,c] 5
deploy[o15,s19,i] 0
deploy[o212,s5,m] 0
deploy[o212,s5,c] 0
deploy[o212,s5,i] 7
deploy[o205,s5,m] 0
deploy[o205,s5,c] 0
deploy[o205,s5,i] 0
deploy[o12,s12,m] 2
deploy[o12,s12,c] 0
deploy[o12,s12,i] 0
deploy[o91,s19,m] 20
deploy[o91,s19,c] 0
deploy[o91,s19,i] 0
deploy[o30,s1,m] 0
deploy[o30,s1,c] 0
deploy[o30,s1,i] 157
deploy[o69,s11,m] 20
deploy[o69,s11,c] 0
deploy[o69,s11,i] 0
deploy[o148,s5,m] 0
deploy[o148,s5,c] 0
deploy[o148,s5,i] 0
deploy[o130,s8,m] 0
deploy[o130,s8,c] 0
deploy[o130,s8,i] 0
deploy[o130,s11,m] 0
deploy[o130,s11,c] 31
deploy[o130,s11,i] 0
deploy[o130,s12,m] 0
deploy[o130,s12,c] 31
deploy[o130,s12,i] 0
deploy[o128,s12,m] 20
deploy[o128,s12,c] 0
deploy[o128,s12,i] 0
deploy[o64,s8,m] 0
deploy[o64,s8,c] 0
deploy[o64,s8,i] 0
deploy[o64,s11,m] 0
deploy[o64,s11,c] 5
deploy[o64,s11,i] 0
deploy[o82,s19,m] 20
deploy[o82,s19,c] 0
deploy[o82,s19,i] 0
deploy[o105,s12,m] 2
deploy[o105,s12,c] 0
deploy[o105,s12,i] 0
deploy[o207,s5,m] 0
deploy[o207,s5,c] 0
deploy[o207,s5,i] 0
deploy[o78,s19,m] 0
deploy[o78,s19,c] 0
deploy[o78,s19,i] 0
deploy[o18,s5,m] 0
deploy[o18,s5,c] 0
deploy[o18,s5,i] 37
deploy[o102,s12,m] 0
deploy[o102,s12,c] 0
deploy[o102,s12,i] 7
deploy[o132,s8,m] 0
deploy[o132,s8,c] 0
deploy[o132,s8,i] 0
deploy[o132,s11,m] 0
deploy[o132,s11,c] 0
deploy[o132,s11,i] 37
deploy[o132,s12,m] 0
deploy[o132,s12,c] 0
deploy[o132,s12,i] 37
deploy[o183,s1,m] 0
deploy[o183,s1,c] 0
deploy[o183,s1,i] 7
deploy[o208,s5,m] 0
deploy[o208,s5,c] 0
deploy[o208,s5,i] 0
deploy[o123,s12,m] 0
deploy[o123,s12,c] 5
deploy[o123,s12,i] 0
deploy[o159,s5,m] 0
deploy[o159,s5,c] 110
deploy[o159,s5,i] 0
deploy[o37,s1,m] 0
deploy[o37,s1,c] 5
deploy[o37,s1,i] 0
deploy[o85,s19,m] 100
deploy[o85,s19,c] 0
deploy[o85,s19,i] 0
deploy[o75,s19,m] 100
deploy[o75,s19,c] 0
deploy[o75,s19,i] 0
deploy[o26,s1,m] 0
deploy[o26,s1,c] 0
deploy[o26,s1,i] 37
deploy[o103,s12,m] 0
deploy[o103,s12,c] 5
deploy[o103,s12,i] 0
deploy[o213,s5,m] 0
deploy[o213,s5,c] 110
deploy[o213,s5,i] 0
deploy[o134,s8,m] 0
deploy[o134,s8,c] 0
deploy[o134,s8,i] 0
deploy[o134,s11,m] 20
deploy[o134,s11,c] 0
deploy[o134,s11,i] 0
deploy[o134,s12,m] 20
deploy[o134,s12,c] 0
deploy[o134,s12,i] 0
deploy[o14,s8,m] 0
deploy[o14,s8,c] 0
deploy[o14,s8,i] 0
deploy[o14,s11,m] 0
deploy[o14,s11,c] 5
deploy[o14,s11,i] 0
deploy[o131,s8,m] 0
deploy[o131,s8,c] 0
deploy[o131,s8,i] 0
deploy[o131,s11,m] 0
deploy[o131,s11,c] 31
deploy[o131,s11,i] 0
deploy[o131,s12,m] 0
deploy[o131,s12,c] 31
deploy[o131,s12,i] 0
deploy[o223,s1,m] 0
deploy[o223,s1,c] 5
deploy[o223,s1,i] 0
deploy[o139,s8,m] 0
deploy[o139,s8,c] 0
deploy[o139,s8,i] 0
deploy[o139,s11,m] 0
deploy[o139,s11,c] 0
deploy[o139,s11,i] 157
deploy[o139,s12,m] 0
deploy[o139,s12,c] 0
deploy[o139,s12,i] 157
deploy[o24,s1,m] 2
deploy[o24,s1,c] 0
deploy[o24,s1,i] 0
deploy[o211,s5,m] 0
deploy[o211,s5,c] 5
deploy[o211,s5,i] 0
deploy[o53,s8,m] 0
deploy[o53,s8,c] 0
deploy[o53,s8,i] 0
deploy[o53,s11,m] 20
deploy[o53,s11,c] 0
deploy[o53,s11,i] 0
deploy[o22,s1,m] 100
deploy[o22,s1,c] 0
deploy[o22,s1,i] 0
deploy[o210,s5,m] 0
deploy[o210,s5,c] 0
deploy[o210,s5,i] 37
deploy[o66,s8,m] 0
deploy[o66,s8,c] 0
deploy[o66,s8,i] 0
deploy[o66,s11,m] 0
deploy[o66,s11,c] 31
deploy[o66,s11,i] 0
deploy[o116,s12,m] 20
deploy[o116,s12,c] 0
deploy[o116,s12,i] 0
deploy[o114,s12,m] 0
deploy[o114,s12,c] 0
deploy[o114,s12,i] 7
deploy[o29,s1,m] 0
deploy[o29,s1,c] 0
deploy[o29,s1,i] 37
deploy[o215,s5,m] 0
deploy[o215,s5,c] 0
deploy[o215,s5,i] 0
deploy[o79,s19,m] 0
deploy[o79,s19,c] 110
deploy[o79,s19,i] 0
deploy[o218,s5,m] 0
deploy[o218,s5,c] 0
deploy[o218,s5,i] 37
deploy[o151,s5,m] 0
deploy[o151,s5,c] 0
deploy[o151,s5,i] 0
deploy[o126,s12,m] 100
deploy[o126,s12,c] 0
deploy[o126,s12,i] 0
deploy[o158,s5,m] 0
deploy[o158,s5,c] 31
deploy[o158,s5,i] 0
deploy[o182,s1,m] 20
deploy[o182,s1,c] 0
deploy[o182,s1,i] 0
deploy[o192,s1,m] 2
deploy[o192,s1,c] 0
deploy[o192,s1,i] 0
deploy[o16,s19,m] 0
deploy[o16,s19,c] 0
deploy[o16,s19,i] 0
deploy[o198,s1,m] 0
deploy[o198,s1,c] 5
deploy[o198,s1,i] 0
deploy[o163,s5,m] 0
deploy[o163,s5,c] 0
deploy[o163,s5,i] 157
deploy[o20,s5,m] 0
deploy[o20,s5,c] 31
deploy[o20,s5,i] 0

------------------------------- Model logfile ------------------------------

Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:02 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 475 rows, 370 columns and 883 nonzeros
Model fingerprint: 0xb41154ec
Variable types: 273 continuous, 97 integer (97 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [3e-02, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 354 rows and 182 columns
Presolve time: 0.00s
Presolved: 121 rows, 188 columns, 322 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 96 rows and 169 columns
Presolve time: 0.00s
Presolved: 25 rows, 19 columns, 51 nonzeros
Found heuristic solution: objective -1030.080611
Variable types: 0 continuous, 19 integer (19 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -1030.08 
No other solutions better than -1030.08

Optimal solution found (tolerance 1.00e-04)
Best objective -1.030080610622e+03, best bound -1.030080610622e+03, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 122 rows and 188 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -3065.66 
No other solutions better than -3065.66

Optimal solution found (tolerance 1.00e-04)
Best objective -3.065658916667e+03, best bound -3.065658916667e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.02 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:09 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 505 rows, 394 columns and 947 nonzeros
Model fingerprint: 0x82ac47b1
Variable types: 291 continuous, 103 integer (103 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [1e-03, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 373 rows and 194 columns
Presolve time: 0.00s
Presolved: 132 rows, 200 columns, 350 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 92 rows and 171 columns
Presolve time: 0.00s
Presolved: 40 rows, 29 columns, 81 nonzeros
Found heuristic solution: objective -857.3974810
Variable types: 0 continuous, 29 integer (29 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -857.397 
No other solutions better than -857.397

Optimal solution found (tolerance 1.00e-04)
Best objective -8.573974809737e+02, best bound -8.573974809737e+02, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 133 rows and 200 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -3614.75 
No other solutions better than -3614.75

Optimal solution found (tolerance 1.00e-04)
Best objective -3.614749527778e+03, best bound -3.614749527778e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.02 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:15 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 495 rows, 386 columns and 931 nonzeros
Model fingerprint: 0xd669c55f
Variable types: 285 continuous, 101 integer (101 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [3e-02, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 366 rows and 190 columns
Presolve time: 0.00s
Presolved: 129 rows, 196 columns, 343 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 92 rows and 169 columns
Presolve time: 0.00s
Presolved: 37 rows, 27 columns, 75 nonzeros
Found heuristic solution: objective -964.4438155
Variable types: 0 continuous, 27 integer (27 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -964.444 
No other solutions better than -964.444

Optimal solution found (tolerance 1.00e-04)
Best objective -9.644438154837e+02, best bound -9.644438154837e+02, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 130 rows and 196 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -2670.78 
No other solutions better than -2670.78

Optimal solution found (tolerance 1.00e-04)
Best objective -2.670781777778e+03, best bound -2.670781777778e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.01 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:22 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 550 rows, 430 columns and 1046 nonzeros
Model fingerprint: 0x51f1c3d3
Variable types: 318 continuous, 112 integer (112 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [3e-02, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 405 rows and 212 columns
Presolve time: 0.00s
Presolved: 145 rows, 218 columns, 388 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 90 rows and 179 columns
Presolve time: 0.00s
Presolved: 55 rows, 39 columns, 111 nonzeros
Found heuristic solution: objective -1014.304253
Variable types: 0 continuous, 39 integer (39 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -1014.3 
No other solutions better than -1014.3

Optimal solution found (tolerance 1.00e-04)
Best objective -1.014304252784e+03, best bound -1.014304252784e+03, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 146 rows and 218 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -3846.34 
No other solutions better than -3846.34

Optimal solution found (tolerance 1.00e-04)
Best objective -3.846336944444e+03, best bound -3.846336944444e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.01 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:28 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 515 rows, 402 columns and 969 nonzeros
Model fingerprint: 0x88cfe005
Variable types: 297 continuous, 105 integer (105 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [1e-03, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 379 rows and 198 columns
Presolve time: 0.00s
Presolved: 136 rows, 204 columns, 360 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 87 rows and 169 columns
Presolve time: 0.00s
Presolved: 49 rows, 35 columns, 99 nonzeros
Found heuristic solution: objective -957.4264645
Variable types: 0 continuous, 35 integer (35 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -957.426 
No other solutions better than -957.426

Optimal solution found (tolerance 1.00e-04)
Best objective -9.574264645494e+02, best bound -9.574264645494e+02, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 137 rows and 204 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -4142.84 
No other solutions better than -4142.84

Optimal solution found (tolerance 1.00e-04)
Best objective -4.142844055556e+03, best bound -4.142844055556e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.01 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:35 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 570 rows, 446 columns and 1092 nonzeros
Model fingerprint: 0xd4015a1b
Variable types: 330 continuous, 116 integer (116 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [3e-02, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 419 rows and 220 columns
Presolve time: 0.00s
Presolved: 151 rows, 226 columns, 405 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 102 rows and 191 columns
Presolve time: 0.00s
Presolved: 49 rows, 35 columns, 99 nonzeros
Found heuristic solution: objective -1057.697751
Variable types: 0 continuous, 35 integer (35 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -1057.7 
No other solutions better than -1057.7

Optimal solution found (tolerance 1.00e-04)
Best objective -1.057697751451e+03, best bound -1.057697751451e+03, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 152 rows and 226 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -3962.52 
No other solutions better than -3962.52

Optimal solution found (tolerance 1.00e-04)
Best objective -3.962523444444e+03, best bound -3.962523444444e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.01 seconds (0.00 work units), solution count 2


Gurobi 11.0.1 (mac64[arm]) logging started Sat May  4 01:31:42 2024

Set parameter LogFile to value "../models/model_moo(May 04,0131).log"
Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (mac64[arm] - Darwin 23.2.0 23C71)

CPU model: Apple M2
Thread count: 8 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 550 rows, 430 columns and 1050 nonzeros
Model fingerprint: 0x45d2bd24
Variable types: 318 continuous, 112 integer (112 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+25]
  Objective range  [3e-02, 2e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+12]
Warning: Model contains large matrix coefficient range
Warning: Model contains large rhs
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.

---------------------------------------------------------------------------
Multi-objectives: starting optimization with 2 objectives ... 
---------------------------------------------------------------------------

Multi-objectives: applying initial presolve ...
---------------------------------------------------------------------------

Presolve removed 408 rows and 212 columns
Presolve time: 0.00s
Presolved: 142 rows, 218 columns, 384 nonzeros
---------------------------------------------------------------------------

Multi-objectives: optimize objective 1 (objective_re_1) ...
---------------------------------------------------------------------------

Found heuristic solution: objective 0.0000000
Presolve removed 114 rows and 197 columns
Presolve time: 0.00s
Presolved: 28 rows, 21 columns, 57 nonzeros
Found heuristic solution: objective -1040.434376
Variable types: 0 continuous, 21 integer (21 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds (0.00 work units)

Explored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 8 (of 8 available processors)

Solution count 1: -1040.43 
No other solutions better than -1040.43

Optimal solution found (tolerance 1.00e-04)
Best objective -1.040434376099e+03, best bound -1.040434376099e+03, gap 0.0000%
---------------------------------------------------------------------------

Multi-objectives: optimize objective 2 (objective_cost_2) ...
---------------------------------------------------------------------------


Loaded user MIP start with objective 750

Presolve removed 143 rows and 218 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 8 available processors)

Solution count 1: -4026.42 
No other solutions better than -4026.42

Optimal solution found (tolerance 1.00e-04)
Best objective -4.026422000000e+03, best bound -4.026422000000e+03, gap 0.0000%

---------------------------------------------------------------------------
Multi-objectives: solved in 0.01 seconds (0.00 work units), solution count 2


------------------------------- Python Code --------------------------------
""" Optimization model: maximize demand and minimize cost: MIP
Outline:
1. Define Decision variables
2. Add Constraints
3. Add objective functions
4. Set some gurobi parameters, & write the model
5. Solve the model
6. Write log file
7. Get some variables out of the model for further analysis

Developer: Tanmoy Das
Date: July 05, 2023 (revise May 2024) """

# %% Data
# data processing libraries
import pandas as pd
from datetime import datetime, date
# optimization
import gurobipy as gp
from gurobipy import GRB
# import custom functions or classes
import custom_func
import math


# %% Model 2: MIP-2
class Model:
    def solve(Stations, OilSpills, ResourcesD, coordinates_st, coordinates_spill, SizeSpill, SizeSpill_n,
              Demand, Sensitivity_R, Sensitivity_n, Eff, Effectiveness_n, Availability, NumberStMax, Distance, Distance_n,
              W, QuantityMin, DistanceMax, Cf_s, CostU, Budget,
              BigM, MaxFO):
        """
        :param Stations:
        :param OilSpills:
        :param ResourcesD:
        :param coordinates_st:
        :param coordinates_spill:
        :param SizeSpill:
        :param SizeSpill_n:
        :param Demand:
        :param Sensitivity_R:
        :param Sensitivity_n:
        :param Eff:
        :param Effectiveness_n:
        :param Availability:
        :param NumberStMax:
        :param Distance:
        :param Distance_n:
        :param W:
        :param QuantityMin:
        :param DistanceMax:
        :param Cf_s:
        :param CostU:
        :param Budget:
        :param BigM:
        :param MaxFO:
        :return:
        """

        from datetime import datetime, date

        w1, w2, w3, w4, w5, w6 = W[0], W[1], W[2], W[3], W[4], W[5]

        # ---------------------------------------- Set & Index ---------------------------------------------------------
        os_pair = {(o, s): custom_func.compute_distance(coordinates_spill[1][o], coordinates_st[1][s])
                   for o in OilSpills
                   for s in Stations
                   if
                   custom_func.compute_distance(tuple(coordinates_spill[1][o]), tuple(coordinates_st[1][s])) < DistanceMax}
        os_pair = tuple(os_pair.keys())

        # sr_pair (based on unique stations in pair_os )
        st_o = list(set([item[1] for item in os_pair]))
        o_st = list(set([item[0] for item in os_pair])) # unique oil spills
        sr_pair = []
        for s in st_o:
            for r in ResourcesD:
                sr_pair.append((s, r))
        sr_pair = tuple(sr_pair)

        osr_pair = {(o, s, r): custom_func.compute_distance(coordinates_spill[1][o], coordinates_st[1][s])
                    for o in OilSpills
                    for s in Stations
                    for r in ResourcesD
                    if
                    custom_func.compute_distance(tuple(coordinates_spill[1][o]), tuple(coordinates_st[1][s])) < DistanceMax}
        osr_pair = tuple(osr_pair.keys())

        print('--------------MIP-moo--------')
        model = gp.Model("MIP-moo-LAMOSCAD")
        # ---------------------------------------- Decision variable ---------------------------------------------------
        cover = model.addVars(os_pair, vtype=GRB.BINARY, name='cover')  # OilSpills
        select = model.addVars(st_o, vtype=GRB.BINARY, name='select')
        deploy = model.addVars(osr_pair, vtype=GRB.CONTINUOUS, lb=0,
                               name='deploy')  # QuantityMin Minimum quantity constraint ++

        # %% -----------------------------------------------------------------------------------------------------------
        # ------------------------------------------------ Constraints -------------------------------------------------

        # ---------------------------------------- Coverage constraints (cover) ----------------------------------------

        # C10: facility must be open to cover oil spill
        C_open_facility_to_cover = model.addConstrs((cover[o, s] <= select[s]
                                                     for o, s in os_pair), name='C_open_facility_to_cover')

        # C15: Each oil spill should be covered by only one station (rethink formulation later)
        C_few_facility_per_spill = model.addConstrs((cover.sum(o, '*') <= MaxFO
                                                   for o, s in os_pair), name='C_few_facility_per_spill')  # ++partly solved

        # ---------------------------------------- Facility constraints (select ) --------------------------------------
        # C11: max number of facilities to be open
        C_max_facility = model.addConstr((gp.quicksum(select[s]
                                                      for s in st_o) <= NumberStMax),
                                         name='C_max_facility')  # SFS style ++

        # C12: Cost of building facility does not exceed budget
        C_budget = model.addConstr(select.prod(Cf_s) <= Budget,
                                   name="C_budget")  # m.addConstr(build.prod(cost) <= budget, name="budget")

        """
        # C14: Hudson
        # Ref Fig3a Canadian Arctic s8, s10 s11, s14
        C_HudsonFacility = model.addConstr((gp.quicksum(select[s]
                                                      for s in ['s8', 's10', 's11', 's14', 's17', 's19']) >= 1),
                                         name='C_HudsonFacility')
        # C15: Up North  s9, s12, s13, s15, s16, s18, s20
        C_UpNorthFacility = model.addConstr((gp.quicksum(select[s]
                                                      for s in ['s9', 's12', 's13', 's15', 's16', 's18', 's20']) <= 1),
                                         name='C_UpNorthFacility')
        """
        # ---------------------------------------- Deploy constraints (deploy) -----------------------------------------
        # C15: resource capacity constaint & deploy only when facility is open
        C_resource_capacity = model.addConstrs((deploy.sum('*', s, r) <= BigM * Availability[s, r] * select[s]  #
                                                for s, r in sr_pair), name='C_open_facility')

        # C16: deploy less than demand
        C_deploy_demand = model.addConstrs((deploy[o, s, r] <= Demand[o, r]
                                            for o, s, r in osr_pair), name='C_deploy_demand')

        # C20: usage limit

        # %% -----------------------------------------------------------------------------------------------------------
        # ----------------------------------------------- Objective function -------------------------------------------
        model.ModelSense = GRB.MINIMIZE
        objective_1 = gp.quicksum((w1 * SizeSpill_n[o] + 100*w2 * Sensitivity_n[o] - w3 * Distance_n[o, s]) * cover[o, s]
                                  for o, s in os_pair)

        objective_2 = gp.quicksum(10**-4*w4 * select[s] * Cf_s[s] for s in st_o) \
                            + gp.quicksum( (10**-2*w5 * CostU[s,r] - 10 * w6 * Effectiveness_n[s, r]) * deploy[o, s, r] for o, s, r in osr_pair)

        model.setObjectiveN(objective_1, index=0, priority=2, weight=-1, name='objective_re_1')
        model.setObjectiveN(objective_2, index=1, priority=1, weight=1, name='objective_cost_2')

        # %% Model parameters
        # Organizing model
        # Limit how many solutions to collect
        model.setParam(GRB.Param.PoolSolutions, 1024)
        # Limit the search space by setting a gap for the worst possible solution that will be accepted
        model.setParam(GRB.Param.PoolGap, 0.80)
        # do a systematic search for the k-best solutions
        # model.setParam(GRB.Param.PoolSearchMode, 2)
        today = date.today()
        now = datetime.now()
        date_time = str(date.today().strftime("%b %d,") + datetime.now().strftime("%H%M"))
        filename = 'model (' + date_time + ')'

        # Write the model
        model.write(f'../models/model_moo.lp')
        model.Params.LogFile = f"../models/model_moo({date_time}).log"  # write the log file

        # %% Solve the model
        model.optimize()
        # Debugging model
        # model.computeIIS()
        model.write('../models/model_moo.sol')

        # %% Query number of multiple objectives, and number of solutions
        x = model.getVars()
        select_series = pd.Series(model.getAttr('X', select))
        deploy_series = pd.Series(model.getAttr('X', deploy))
        # select_series[select_series > 0.5]  # +++
        # deploy_series[deploy_series > 0.5]
        nSolutions = model.SolCount
        nObjectives = model.NumObj
        print('Problem has', nObjectives, 'objectives')
        print('Gurobi found', nSolutions, 'solutions')
        solutions = []
        for s in range(nSolutions):
            # Set which solution we will query from now on
            model.params.SolutionNumber = s

            # Print objective value of this solution in each objective
            print('Solution', s, ':', end='')
            for o in range(nObjectives):
                # Set which objective we will query
                model.params.ObjNumber = o
                # Query the o-th objective value
                print(' ', round(model.ObjNVal, 2), end=' ')
                # query the full vector of the o-th solution
                solutions.append(model.getAttr('Xn', x))


        # %% Output the result
        # Obtain model results & carry them outside the model scope
        # model.printAttr('X')
        mvars = model.getVars()  # these values are NOT accessible outside the model scope
        names = model.getAttr('VarName', mvars)
        values = model.getAttr('X', mvars)
        # X Xn https://www.gurobi.com/documentation/9.5/refman/working_with_multiple_obje.html

        objValues = []
        nSolutions = model.SolCount
        nObjectives = model.NumObj
        for s in range(nSolutions):
            # Set which solution we will query from now on
            model.params.SolutionNumber = s
            print('Solution', s, ':', end='')
            for o in range(nObjectives):
                model.params.ObjNumber = o
                objValues.append(model.ObjNVal)
        cover_series = pd.Series(model.getAttr('X', cover))
        cover_1s = cover_series[cover_series > 0.5]

        select_series = pd.Series(model.getAttr('X', select))
        select_1s = select_series[select_series > 0.5]
        deploy_series = pd.Series(model.getAttr('X', deploy))
        deploy_1s = deploy_series[deploy_series > 0.5]
        cover_series = pd.Series(model.getAttr('X', cover))
        cover_1s = cover_series[cover_series > 0.5]

        # Saving the file
        modelStructure_output_code = python_code = logfile = model_structure = outputs = inputs = ""
        # Reading data from files
        with open('../models/model_moo.lp') as fp:
            model_structure = fp.read()
        with open('../models/model_moo.sol') as fp:
            outputs = fp.read()
        with open(f'../models/model_moo({date_time}).log') as fp:
            logfile = fp.read()
        with open('model.py') as fp:
            python_code = fp.read()
        # Merging 2 files
        # To add the data of file2
        # from next line
        modelStructure_output_code += "------------------------------- Model Structure ------------------------------\n"
        modelStructure_output_code += model_structure
        modelStructure_output_code += "\n------------------------------- Model Outputs ------------------------------\n"
        modelStructure_output_code += outputs
        modelStructure_output_code += "\n------------------------------- Model logfile ------------------------------\n"
        modelStructure_output_code += logfile
        modelStructure_output_code += "\n------------------------------- Python Code --------------------------------\n"
        modelStructure_output_code += python_code

        with open(f'../models/Structure, outputs & python code of {filename}.txt', 'w') as fp:
            fp.write(modelStructure_output_code)

        # Extract assignment variables
        sol_y = pd.Series(model.getAttr('X', deploy))
        sol_y.name = 'Assignments'
        sol_y.index.names = ['Spill #', 'Station no.', 'Resource type']
        assignment4 = sol_y[sol_y > 0.5].to_frame()
        assignment_name = assignment4.reset_index()
        # print('assignment_name', assignment_name)

        # %%
        # organize data # need to clean this section ++
        spill_df = pd.DataFrame(coordinates_spill[1]).T.reset_index()
        spill_df.columns = ['Spill #', 'Spill_Latitude', 'Spill_Longitude']
        spill_df['Resource needed'] = pd.DataFrame(SizeSpill)  # ++ update with spill size later
        spill_df['Sensitivity'] = Sensitivity_R  # ++

        station_df = pd.DataFrame(coordinates_st[1]).T.reset_index()
        station_df.columns = ['Station no.', 'St_Latitude', 'St_Longitude']

        assignment2 = pd.merge(assignment_name[['Spill #', 'Station no.']],
                               station_df[['Station no.', 'St_Latitude', 'St_Longitude']])

        assignment3 = pd.merge(assignment2, spill_df[['Spill #', 'Spill_Latitude', 'Spill_Longitude']])
        deploy_reset = deploy_1s.reset_index()
        deploy_reset.columns = ['Spill #', 'Station no.', 'Resource Type', 'Quantity deployed']
        assignment = pd.merge(assignment3, deploy_reset)

        assignment['Distance'] = [math.sqrt((assignment.loc[i]['St_Latitude'] - assignment.loc[i]['Spill_Latitude']) ** 2 \
                                            + (assignment.loc[i]['St_Longitude'] - assignment.loc[i][
            'Spill_Longitude']) ** 2)
                                  for i in assignment.index]

        # Outputs from the model +++
        # Calculate Coverage # chance later ++
        coverage_percentage = int(100 * len(cover_1s)/ len(OilSpills))  # / len(cover_series)
        # Calculate total distance travelled
        DistanceTravelled = []
        for i in range(len(assignment)):
            st_coord = (assignment[['St_Latitude', 'St_Longitude']]).iloc[i, :].values
            sp_coord = (assignment[['Spill_Latitude', 'Spill_Longitude']]).iloc[i, :].values
            aaa = DistanceTravelled.append(custom_func.compute_distance(st_coord, sp_coord))

        DistanceTravelled = sum(DistanceTravelled)*80  # 80 for convering GIS data into kilometer
        ResponseTimeM = round((DistanceTravelled / 60) / len(assignment), 2)  # len() +++ OilSpills
        print(f'Coverage Percentage: {coverage_percentage}%')
        print(f'Mean Response Time: {ResponseTimeM}')

        return model, select, deploy, mvars, names, values, objValues, \
            spill_df, station_df, cover_1s, select_1s, deploy_1s, ResponseTimeM, coverage_percentage, assignment
